{"version":3,"sources":["components/Camera/Show.module.css","logo.svg","components/customHooks/useInterval.js","components/Camera/Camera.js","components/Camera/index.js","components/Database/lib/firebase.js","components/Database/index.js","components/MediaRecorder/index.js","components/MediaRecorder/VideoRecorder.js","components/BrightnessPredictor/helpers/index.js","components/BrightnessPredictor/index.js","components/BrightnessPredictor/BrightnessDetector.js","components/RiceCam/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gallery","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","SETTINGS","width","height","facingMode","WebcamComponent","_ref","onRef","webcamRef","_useState","useState","_useState2","Object","slicedToArray","cameraReady","setCameraReady","setupCamera","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e1","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","_this","setState","error_messages","video","onloadedmetadata","stop","apply","this","arguments","react_default","createElement","react_webcam_default","audio","ref","screenshotFormat","videoConstraints","Camera","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","keys","map","v","concat","firebase","apps","length","initializeApp","dayjs","locale","logging","message","timestamp","format","daystamp","firestore","collection","doc","set","merge","then","catch","e","console","log","activityMonitor","convertToObject","browserStorage","estimate","mem","ram","connection","connectionSpeed","battery","batteryLevel","performance","output","input","showFunction","obj","storage","sent","usage","quota","percent","toFixed","window","memory","deviceMemory","mozConnection","webkitConnection","msConnection","effectiveType","getBattery","level","network","browserMemory","objectSpread","totalJSHeapSize","jsHeapSizeLimit","comment","status","_x","Record","videoRef","triggerRecording","duration","onComplete","showPreview","OPTIONS","videoOut","setVideoOut","_useState3","_useState4","recordDuration","setRecordDuration","_useState5","_useState6","isRecording","_useState7","_useState8","_useState9","_useState10","videoChunk","setVideoChunk","record","makeLink","blob","Blob","type","url","URL","createObjectURL","out","key","controls","src","href","download","toConsumableArray","stream","active","recorder","MediaRecorder","ondataavailable","data","onstart","setTimeout","start","style","display","listStyleType","overflowX","loadModel","tf","abrupt","predictBrightness","_callee2","rgbarray","model","_context2","xs","Array","from","inputXS","preds","predict","print","arraySync","isBright","_ref3","_callee3","canvas","clrs","flat","res","_context3","getContext","getImageData","_x2","BrightnessDetector","isDetecting","onDetect","detectionDelay","setDetectionDelay","detect","bright","document","drawImage","PhotoStream","streamDelay","isStreaming","videoWidth","videoHeight","toDataURL","toBlob","b","imgBlob","put","location","path","err","pushImageDataToStorage","isWithinTimeRange","end","sH","slice","sM","startTimestamp","hour","minute","eH","eM","endTimestamp","chk1","isAfter","chk2","isBefore","CameraComponent","_ref4","_ref4$showPreviews","showPreviews","setVideoRef","logs","setLogs","_useState11","_useState12","isDay","setIsDay","handleLog","_useState13","_useState14","setIsDetecting","_useState15","_useState16","setIsRecording","_useState17","_useState18","videoDuration","setVideoDuration","_useState19","_useState20","timer","setTimer","_useState21","_useState22","isRecordingContinuously","setIsRecordingContinuously","_useState23","_useState24","recordIntervalMin","setRecordIntervalMin","t","_useState25","_useState26","dbCommands","setDBCommands","onChange","onSnapshot","handleRecordContinuous","run","setContinuousRecording","setLocalStateMonitor","isContinuouslyRecording","mins","amount","time","JSON","stringify","timerStart","timerEnd","isTimerSet","videoDurationSec","videoRecordFreqMin","_useState27","nextRecordingTime","_useState28","localStateMonitor","currentState","_useState29","_useState30","_useState31","_useState32","setIsStreaming","debugStreamImages","backgroundColor","components_Camera","color","onClick","i","components_MediaRecorder","vidBlob","l","pushVideoDataToStorage","RiceCam_PhotoStream","BrightnessPredictor","App","className","RiceCam","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcfd6b63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Show_gallery__34GpT\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst SETTINGS = {\n  width: 1080,\n  height: 1080,\n  facingMode: \"environment\"\n};\n\nconst WebcamComponent = ({ onRef }) => {\n  const webcamRef = useRef();\n  const [cameraReady, setCameraReady] = useState(false);\n  const setupCamera = async () => {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const video = webcamRef.current.video;\n    video.onloadedmetadata = () => {\n      setCameraReady(true);\n    };\n  };\n\n  useEffect(() => {\n    setupCamera();\n  }, [webcamRef]);\n\n  if (cameraReady) {\n    onRef && onRef(webcamRef);\n  }\n\n  return (\n    <Webcam\n      audio={false}\n      ref={webcamRef}\n      screenshotFormat=\"image/jpeg\"\n      videoConstraints={SETTINGS}\n      height={400}\n      width={400}\n    />\n  );\n};\n\nexport default WebcamComponent;\n","import Camera from \"./Camera\";\nimport Show from \"./Show\";\n\nexport default Camera;\nexport const Gallery = Show;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nconst PushToFirebase = (databaseRef = \"test\", data, callback) => {\n  firebase\n    .database()\n    .ref(databaseRef)\n    .push(data)\n    .then(v => callback(v));\n};\n\nconst PushToFirestore = (databaseRef = \"test\", data, callback) => {\n  const db = firebase.firestore();\n  db.collection(databaseRef);\n};\n\nconst sortTimestampArray = (data, latest = false) => {\n  if (latest) return data.sort((prev, next) => dayjs(next) - dayjs(prev));\n  // latest first\n  else return data.sort((prev, next) => dayjs(prev) - dayjs(next)); // earliest first\n};\n\nexport const logging = (message, callback) => {\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"logs\")\n    .doc(timestamp)\n    .set({ message: message }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const activityMonitor = async callback => {\n  function convertToObject(input, showFunction) {\n    // recursively\n    // https://stackoverflow.com/questions/37733272/convert-dom-object-to-javascript-object\n    let obj = {};\n    for (var p in input) {\n      switch (typeof input[p]) {\n        case \"function\":\n          if (showFunction) obj[p] = `function: ${input[p]}`;\n          break;\n        case \"object\":\n          obj[p] = convertToObject(input[p], showFunction);\n          break;\n        case \"number\":\n          obj[p] = input[p];\n          break;\n        default:\n          obj[p] = input[p];\n      }\n    }\n    return obj;\n  }\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  // browser tab storage\n  let browserStorage;\n  if (\"storage\" in navigator && \"estimate\" in navigator.storage) {\n    const estimate = await navigator.storage.estimate();\n    browserStorage = {\n      usage: estimate.usage,\n      quota: estimate.quota,\n      percent: `${((estimate.usage * 100) / estimate.quota).toFixed(0)} used`\n    };\n  } else {\n    browserStorage = \"browser does not have storage API\";\n  }\n  // js heap size\n  //   This API returns three pieces of data:\n  // jsHeapSizeLimit - The amount of memory (in bytes) that the JavaScript heap is limited to.\n  // totalJSHeapSize - The amount of memory (in bytes) that the JavaScript heap has allocated including free space.\n  // usedJSHeapSize - The amount of memory (in bytes) currently being used.\n  const mem = window.performance.memory || {};\n  // RAM\n  const ram =\n    `${navigator.deviceMemory} GB` ||\n    \"browser does not have deviceMemory API (ram)\";\n  // network speed\n  const connection =\n    navigator.connection ||\n    navigator.mozConnection ||\n    navigator.webkitConnection ||\n    navigator.msConnection;\n  const connectionSpeed = connection\n    ? connection.effectiveType\n    : \"browser does not have connection API\";\n  // battery\n  let battery;\n  if (\"getBattery\" in navigator) {\n    battery = await navigator.getBattery();\n  }\n  const batteryLevel = battery\n    ? battery.level\n    : \"browser does not have battery API\";\n  // general performance\n  // .toJSON() is unreliable, returns custom objects\n  const performance = convertToObject(window.performance, false);\n\n  const output = {\n    storage: browserStorage,\n    ram: ram,\n    network: connectionSpeed,\n    battery: batteryLevel,\n    performance: performance,\n    browserMemory: {\n      ...convertToObject(mem, false),\n      usage: `${(mem.totalJSHeapSize / mem.jsHeapSizeLimit) * 100} percent`,\n      comment:\n        \"units in bytes. percent is percent of allocated browser memory (multiple tabs included)\"\n    }\n  };\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"browser performance logs\")\n    .doc(timestamp)\n    .set({ status: output }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const pushImageDataToStorage = imgBlob => {\n  const imgFolder = \"images\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"pushing Image blob: \", imgBlob);\n  firebase\n    .storage()\n    .ref(`${imgFolder}/${timestamp}.png`)\n    .put(imgBlob)\n    .then(res => {\n      console.log(`image blob pushed to: ${res.ref.location.path}`, res);\n      const path = res.ref.location.path;\n      firebase\n        .firestore()\n        .collection(\"imageURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path });\n    })\n    .catch(e => {\n      const err = `pushImageDataToStorage: ERROR ${e}`;\n      console.log(err);\n      logging(err);\n    });\n};\n\nexport const pushVideoDataToStorage = vidBlob => {\n  const vidFolder = \"videos\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${vidFolder}/${timestamp}.mp4`)\n    .put(vidBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      firebase\n        .firestore()\n        .collection(\"videoURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path })\n        .then(v => {\n          const l = `pushVideoDataToStorage: COMPLETE video:${vidFolder}/${timestamp}.mp4, ref: ${path}, callback: ${v}`;\n          logging(l, () => console.log(l));\n        });\n    })\n    .catch(e => {\n      const err = `pushVideoDataToStorage: ERROR ${JSON.stringify(e)}`;\n      logging(err, () => console.log(err));\n    });\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .get()\n    .then(async querySnapshot => {\n      let output = [];\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        // console.log(url);\n\n        output.push(\n          firebase\n            .storage()\n            .ref(url)\n            .getDownloadURL() // this is an async function\n        );\n      });\n      return Promise.all(output);\n    });\n};\n\n// single call\nexport const pullAppStateFromDB = () => {\n  firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .get()\n    .then(doc => {\n      console.log(doc.data());\n    })\n    .catch(e => console.log(\"REMOTE DB STATE READ ERROR: \", e));\n};\n\n// listener function\nexport const listenToDBAppState = onChange => {\n  return firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .onSnapshot(doc => {\n      onChange && onChange(doc.data());\n      return doc.data();\n    });\n};\n// notify function\nexport const reportAppStatetoDB = currentState => {\n  firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"currentState\")\n    .set(currentState, { merge: true })\n    .then(v => console.log(\"REMOTE STATE UPDATER: complete. \", v))\n    .catch(e => console.log(\"REMOTE DB STATE UPDATE ERROR: \", e));\n};\n\nexport const FireStoreState = ({\n  collection = \"appState\",\n  doc = \"commands\",\n  onUpdate\n}) => {\n  const [dbState, setDBState] = useState({});\n\n  useEffect(() => {\n    firebase\n      .collection(collection)\n      .doc(doc)\n      .onSnapshot(snapshot => {\n        setDBState(snapshot.data());\n      });\n    return () => setDBState({});\n  }, []);\n\n  useEffect(() => {\n    if (onUpdate) onUpdate(dbState);\n  }, [dbState]);\n\n  return <p>db state: {JSON.stringify(dbState, null, 2)}</p>;\n};\n\nconst deleteImageDataFromDBRecords = () => {\n  // delete by timestamp based on prediction\n  const imgCollection = \"imageData\";\n};\n\nconst createVideoFromDBRecords = () => {\n  // pull in data from DB and construct video\n  const imgCollection = \"imageData\";\n  const predCollection = \"\";\n};\n\nconst getPredictionsFromDB = () => {\n  // predictions should return together with the references UID from imageData\n  // as well as timestamp\n  const collectionName = \"predictions\";\n};\n","import Record from \"./VideoRecorder\";\n\nexport default Record;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { logging } from \"../Database\";\n\nconst VideoRecorder = ({\n  videoRef,\n  triggerRecording,\n  duration,\n  onComplete,\n  showPreview\n}) => {\n  const OPTIONS = {\n    tag: \"video\",\n    type: \"video/webm\",\n    ext: \".mp4\",\n    gUM: { video: true, audio: true }\n  };\n  const [videoOut, setVideoOut] = useState(\"\");\n\n  const [recordDuration, setRecordDuration] = useState(5000);\n  useEffect(() => {\n    if (duration && typeof duration === \"number\") setRecordDuration(duration);\n  }, [duration]);\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoRecordings, setVideoRecordings] = useState([]);\n  const [videoChunk, setVideoChunk] = useState([]);\n  const ulRef = useRef();\n  useEffect(() => {\n    if (triggerRecording === true && isRecording === false) {\n      logging(\"VideoRecorder: START starting one recording\");\n      record({ duration: recordDuration });\n    }\n  }, [triggerRecording, isRecording]);\n\n  useEffect(() => {\n    // if there is a recording\n    if (videoChunk.length > 0) {\n      console.log(\"making link!\", videoChunk);\n      showPreview && makeLink();\n    }\n  }, [videoChunk]);\n\n  const makeLink = () => {\n    let blob = new Blob(videoChunk, { type: OPTIONS.type });\n\n    let url = URL.createObjectURL(blob);\n\n    const out = (\n      <li key={url}>\n        <video height={200} controls src={url} />\n        <br />\n        <a href={url} download={`video${OPTIONS.ext}`}>{`download ${`video${\n          OPTIONS.ext\n        }`}`}</a>\n      </li>\n    );\n    setVideoOut([...videoOut, out]);\n  };\n\n  const record = ({ duration = 2000 }) => {\n    if (videoRef) {\n      const stream = videoRef.current.stream;\n      if (!stream.active) {\n        console.log(\"media stream is not active.\", stream);\n      }\n\n      // setup recorder\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = e => {\n        // when the recording is complete and there is data\n        setVideoChunk([e.data]);\n        if (onComplete) onComplete(e.data);\n      };\n      recorder.onstart = e => {\n        setVideoChunk([]);\n        setTimeout(() => {\n          recorder.stop();\n        }, recordDuration);\n      };\n\n      // run recorder\n      recorder.start();\n    }\n  };\n\n  return (\n    <ul\n      style={{\n        display: \"flex\",\n        listStyleType: \"none\",\n        width: \"100%\",\n        overflowX: \"scroll\"\n      }}\n    >\n      {videoOut}\n    </ul>\n  );\n};\n\nexport default VideoRecorder;\n","import * as tf from \"@tensorflow/tfjs\";\n\nconst WIDTH = 12;\nconst HEIGHT = 9;\nconst ARR_LENGTH = 432;\n\nconst loadModel = async () => {\n  return await tf.loadLayersModel(\"assets/model/brightness-predictor.json\");\n};\n\nconst predictBrightness = async rgbarray => {\n  const model = await loadModel();\n\n  if (model) {\n    return await tf.tidy(() => {\n      const xs = [Array.from(rgbarray)];\n      const inputXS = tf.tensor2d(xs, [xs.length, ARR_LENGTH]);\n\n      console.log(inputXS);\n\n      const preds = model.predict(inputXS);\n\n      preds.print();\n\n      const out = preds.arraySync()[0][0];\n\n      return out;\n    });\n  }\n};\n\n// sml model learning bright and dark\nexport const isBright = async canvas => {\n  const clrs = canvas\n    .getContext(\"2d\")\n    .getImageData(0, 0, canvas.width, canvas.height);\n\n  console.log(clrs);\n\n  const flat = clrs.data;\n  const res = await predictBrightness(flat);\n  console.log(res);\n  return res > 0.6 ? true : false;\n};\n\nexport default isBright;\n","import BrightnessDetector from \"./BrightnessDetector\";\n\nexport default BrightnessDetector;\n","import { useState, useEffect } from \"react\";\nimport useInterval from \"../customHooks/useInterval\";\n\nimport { isBright } from \"./helpers\";\n\nconst BrightnessDetector = ({ videoRef, isDetecting, delay, onDetect }) => {\n  // local ML brightness detection\n  const [detectionDelay, setDetectionDelay] = useState(500);\n  useEffect(() => {\n    if (delay && typeof delay === \"number\") setDetectionDelay(delay);\n  }, [delay]);\n\n  useInterval(\n    () => {\n      detect();\n    },\n    isDetecting ? detectionDelay : null\n  );\n  const detect = async () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 12;\n      canvas.height = 9;\n      // TODO: check if canvas is drawing entire image, or is it cut off\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // check brightness\n      const bright = await isBright(canvas);\n      if (onDetect) {\n        onDetect({ bright: bright });\n      }\n    }\n  };\n  return null;\n};\n\nexport default BrightnessDetector;\n","// https://ml5js.org/docs/image-classification-example\n// https://codelabs.developers.google.com/?cat=TensorFlow\n// https://console.firebase.google.com/u/3/project/operation-verde-ricecam/database\n\nimport React, { useState, useEffect, useRef } from \"react\";\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\n\nimport useInterval from \"../customHooks/useInterval\";\nimport Camera, { Gallery } from \"../Camera\";\nimport VideoRecorder from \"../MediaRecorder\";\nimport BrightnessDetector from \"../BrightnessPredictor\";\nimport {\n  pushImageDataToStorage,\n  pushVideoDataToStorage,\n  reportAppStatetoDB,\n  listenToDBAppState,\n  grabListOfVideoPaths,\n  logging,\n  activityMonitor\n} from \"../Database\";\n\nimport { download, convertToArray, convertToObject } from \"../atoms\";\n\ndayjs.locale(\"ja\");\nconst SCALE = 1;\nconst RGB_SCALE = 0.02;\nconst DETECT_SCALE = 0.02;\nconst STREAM_SCALE = 1;\nconst MONITOR_SCALE = 0.1;\n\nconst PhotoRecorder = ({ videoRef, captureDelay, isCapturing, onRecord }) => {\n  useInterval(\n    () => {\n      capture();\n    },\n    isCapturing ? captureDelay : null\n  );\n\n  const [data, setData] = useState([]);\n  const [rgb, setRGB] = useState([]);\n  const capture = () => {\n    let out = {\n      b64: \"\",\n      rgbArray: []\n    };\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * SCALE;\n      canvas.height = video.videoHeight * SCALE;\n      // canvas.width = 12;\n      // canvas.height = 9;\n\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n      out.b64 = [...data, b64];\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      canvas.width = video.videoWidth * RGB_SCALE;\n      canvas.height = video.videoHeight * RGB_SCALE;\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // rgb array (flat)\n      const clrs = context.getImageData(0, 0, canvas.width, canvas.height);\n      console.log(clrs);\n      const flat = convertToArray(clrs.data);\n\n      setRGB([...rgb, flat]);\n      out.rgbArray = [...rgb, flat];\n      // download(JSON.stringify({ data: flat }), \"temp.json\", \"application/json\");\n\n      onRecord && onRecord(out);\n\n      return data;\n    }\n  };\n\n  return <p>capturing: {isCapturing}</p>;\n};\n\nconst PhotoStream = ({ videoRef, streamDelay, isStreaming }) => {\n  useInterval(\n    () => {\n      stream();\n    },\n    isStreaming ? streamDelay : null\n  );\n  const stream = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * STREAM_SCALE;\n      canvas.height = video.videoHeight * STREAM_SCALE;\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // preview\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      // setData([...data, b64]);\n\n      // blob it to send to db\n      // blobbing takes a long time therefore there is a callback\n      canvas.toBlob(b => {\n        console.log(b);\n        pushImageDataToStorage(b);\n      });\n    }\n  };\n\n  return <p> DEBUG: photo streaming: {`${isStreaming}`}</p>;\n};\n\nconst isWithinTimeRange = (start, end) => {\n  console.log(start, end);\n  if (!start || !end) return false;\n  const timestamp = dayjs();\n  const sH = start.slice(0, 2);\n  const sM = start.slice(2);\n  const startTimestamp = dayjs()\n    .hour(sH)\n    .minute(sM);\n\n  const eH = end.slice(0, 2);\n  const eM = end.slice(2);\n  const endTimestamp = dayjs()\n    .hour(eH)\n    .minute(eM);\n\n  const chk1 = timestamp.isAfter(startTimestamp);\n  const chk2 = timestamp.isBefore(endTimestamp);\n  const res = chk1 && chk2;\n\n  return res;\n};\n\nconst Timer = ({ start, end, onDetect }) => {\n  if (!start || !end) return \"null timer\";\n  const timestamp = dayjs();\n  const sH = start.slice(0, 2);\n  const sM = start.slice(2);\n  const startTimestamp = dayjs()\n    .hour(sH)\n    .minute(sM);\n\n  const eH = end.slice(0, 2);\n  const eM = end.slice(2);\n  const endTimestamp = dayjs()\n    .hour(eH)\n    .minute(eM);\n\n  const chk1 = timestamp.isAfter(startTimestamp);\n  const chk2 = timestamp.isBefore(endTimestamp);\n  const res = chk1 && chk2;\n\n  res && onDetect && onDetect(res);\n\n  return (\n    <div>\n      <h3>timer: </h3>\n      <p>now: {timestamp.format(\"HH:mm\")}</p>\n      <p>start: {startTimestamp.format(\"HH:mm\")}</p>\n      <p>end: {endTimestamp.format(\"HH:mm\")}</p>\n      <p>recording allowed? : {`${res}`}</p>\n    </div>\n  );\n};\n\nconst VideoList = () => {\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n\n  useEffect(() => {\n    grabListOfVideoPaths().then(v => {\n      setVlist(v);\n    });\n  }, []);\n\n  return (\n    <>\n      <h3>current list of videos today ({vlist.length}): </h3>\n      <ul\n        style={{\n          whiteSpace: \"nowrap\",\n          fontSize: \"0.5rem\",\n          listStyleType: \"none\",\n          height: 300,\n          overflow: \"scroll\"\n        }}\n      >\n        {vlist.map((v, i) => {\n          return (\n            <li key={i} style={{ margin: \"5px 0\" }}>\n              <a href={v}>{v}</a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst CameraComponent = ({ showPreviews = false }) => {\n  const [videoRef, setVideoRef] = useState();\n  const [logs, setLogs] = useState([]);\n  const [isDay, setIsDay] = useState(true);\n  // log messages\n  const handleLog = message => {\n    setLogs(prev => [...prev.slice(-4), message]);\n    logging(message, v => console.log(\"LOGGER: completed. \", v));\n  };\n  // log browser status\n  const ACTIVITY_MONITOR_INTERVAL = 60000;\n  useInterval(() => {\n    console.log(\"logging browser performance\");\n    activityMonitor();\n  }, ACTIVITY_MONITOR_INTERVAL);\n\n  // local ML brightness detector\n  const [isDetecting, setIsDetecting] = useState(false);\n  const DELAY = 1000;\n\n  // video recorder\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(5000);\n  const [timer, setTimer] = useState({ start: null, end: null });\n  const [isRecordingContinuously, setIsRecordingContinuously] = useState(false);\n  const EVERY_N_MINS = 5;\n  const [recordIntervalMin, setRecordIntervalMin] = useState(EVERY_N_MINS);\n  useInterval(\n    () => {\n      const t = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n\n      if (!isRecording && isWithinTimeRange(timer.start, timer.end)) {\n        handleLog(`recording video at ${t}`);\n        console.log(\n          \"within timer?? \",\n          isWithinTimeRange(timer.start, timer.end)\n        );\n        setIsRecording(true);\n      } else {\n        handleLog(\"recording still underway, not setting recording to true\");\n      }\n    },\n    isRecordingContinuously ? recordIntervalMin * 60000 : null\n  );\n\n  // listen to DB commands (remote)\n  const [dbCommands, setDBCommands] = useState({});\n  useEffect(() => {\n    if (videoRef) {\n      console.log(\"listening to DB!\");\n      listenToDBAppState(setDBCommands);\n    }\n  }, [videoRef]);\n  // set commands according to db\n  const handleSetVideoDuration = amount => {\n    handleLog(\n      `setting recording duration to ${dbCommands.videoDurationSec} secs`\n    );\n    setVideoDuration(amount);\n  };\n  const handleSetVideoRecordFrequency = mins => {\n    handleLog(\n      `setting recording interval to ${dbCommands.videoRecordFreqMin} mins`\n    );\n    setRecordIntervalMin(mins);\n  };\n  const handleSetTimer = time => {\n    handleLog(`setting timers to ${JSON.stringify(time)}`);\n    if (time.start && time.end) {\n      setLocalStateMonitor(p => ({\n        ...p,\n        isTimerSet: true\n      }));\n      setTimer(time);\n    }\n  };\n  const handleRecordOnce = run => {\n    handleLog(`recording video once`);\n    setLocalStateMonitor(p => ({\n      ...p,\n      isRecording: true\n    }));\n    setIsRecording(true);\n  };\n  const handleRecordContinuous = run => {\n    if (run) {\n      handleLog(\n        `setting continuous recording to ${dbCommands.setContinuousRecording}`\n      );\n      setLocalStateMonitor(p => ({\n        ...p,\n        isContinuouslyRecording: true,\n        isRecording: true\n      }));\n      setIsRecording(true);\n      setIsRecordingContinuously(true);\n    } else {\n      handleLog(\n        `setting continuous recording to ${dbCommands.setContinuousRecording}`\n      );\n      setLocalStateMonitor(p => ({\n        ...p,\n        isContinuouslyRecording: false,\n        isRecording: false\n      }));\n      setIsRecording(false);\n      setIsRecordingContinuously(false);\n    }\n  };\n  useEffect(() => {\n    if (dbCommands) {\n      handleLog(`commands received: ${JSON.stringify(dbCommands)}`);\n      if (\n        timer.start !== dbCommands.timerStart ||\n        timer.end !== dbCommands.timerEnd\n      ) {\n        handleSetTimer({\n          start: dbCommands.timerStart,\n          end: dbCommands.timerEnd\n        });\n      }\n      if (isRecordingContinuously !== dbCommands.setContinuousRecording) {\n        handleRecordContinuous(dbCommands.setContinuousRecording);\n      }\n      if (videoDuration !== dbCommands.videoDurationSec) {\n        handleSetVideoDuration(dbCommands.videoDurationSec);\n      }\n      if (recordIntervalMin !== dbCommands.videoRecordFreqMin) {\n        handleSetVideoRecordFrequency(dbCommands.videoRecordFreqMin);\n      }\n    }\n  }, [dbCommands]);\n\n  // push local state to DB\n  const [localStateMonitor, setLocalStateMonitor] = useState({\n    isContinuouslyRecording: null,\n    isRecording: null,\n    isTimerSet: null,\n    nextRecordingTime: null\n  });\n  useEffect(() => {\n    reportAppStatetoDB(localStateMonitor);\n  }, [localStateMonitor]);\n\n  // --------\n  // TESTING\n  // --------\n  // db streaming for images\n  const [streamDelay, setStreamDelay] = useState(100);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const streamToDB = () => {\n    // toggle\n\n    if (!isStreaming) {\n      handleLog(\"streaming images to database!\");\n      // setStreamDelay(100);\n      setIsStreaming(true);\n    } else {\n      handleLog(\"image streaming stopped!\");\n      setIsStreaming(false);\n      // setStreamDelay(1000);\n    }\n  };\n  const handleStreamToDB = run => {\n    if (run) {\n      handleLog(\"DEBUG: streaming images to database!\");\n      // setStreamDelay(100);\n      setIsStreaming(true);\n    } else {\n      handleLog(\"DEBUG: stopping image stream!\");\n      setIsStreaming(false);\n    }\n  };\n  useEffect(() => {\n    if (dbCommands) {\n      if (isStreaming !== dbCommands.debugStreamImages) {\n        handleStreamToDB(dbCommands.debugStreamImages);\n      }\n    }\n  }, [dbCommands]);\n\n  // const handleRecord1Hour = () => {\n  //   const OneHourInMS = 3600000;\n  //   setIsRecording(true);\n  //   setIsRecordingContinuously(true);\n  //   setTimeout(() => {\n  //     setIsRecordingContinuously(false);\n  //   }, OneHourInMS);\n  // };\n\n  const handleToggleDetect = () => {\n    setIsDetecting(!isDetecting);\n  };\n\n  const handleVideoComplete = vidBlob => {\n    console.log(vidBlob);\n    pushVideoDataToStorage(vidBlob);\n    setLocalStateMonitor(p => ({ ...p, isRecording: false }));\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    if (videoRef) {\n      const video = videoRef.current.video;\n      video.height = video.videoHeight * MONITOR_SCALE;\n      video.width = video.videoWidth * MONITOR_SCALE;\n      console.log(videoRef.current.video);\n    }\n  }, [videoRef]);\n\n  return (\n    <div style={{ backgroundColor: isDay ? \"white\" : \"#282c34\" }}>\n      <Camera onRef={setVideoRef} />\n\n      <br />\n      <code>debug buttons: </code>\n      {/* <button onClick={captureOne}>capture</button>\n      <button onClick={capture5sec}>capture5sec</button>\n      <button onClick={capture5secvideo}>capture5sec video</button>\n      <button onClick={downloadAsJson}>download data as json</button>\n      <button onClick={sendToDB}>push to database</button> */}\n      <button\n        style={{ color: isStreaming ? \"red\" : \"orange\" }}\n        onClick={streamToDB}\n      >\n        DEBUG: toggle stream to database\n      </button>\n      <button onClick={handleToggleDetect}>toggle brightness detection</button>\n      <button\n        style={{ color: isRecording ? \"red\" : \"black\" }}\n        onClick={handleRecordOnce}\n      >\n        record 5 sec\n      </button>\n      {/* <button onClick={handleRecord1Hour}>\n        record 5 sec videos for 1 hour\n      </button> */}\n      <button\n        onClick={handleRecordContinuous}\n        style={{ color: isRecordingContinuously ? \"red\" : \"black\" }}\n      >\n        record 5 sec indefinitely\n      </button>\n      <br />\n      <ul>\n        {logs.map((v, i) => (\n          <li key={i}>{v}</li>\n        ))}\n      </ul>\n\n      <br />\n      {/* {showPreviews && <Gallery data={data} />} */}\n      <VideoRecorder\n        videoRef={videoRef}\n        triggerRecording={isRecording}\n        duration={videoDuration}\n        showPreview={showPreviews}\n        onComplete={handleVideoComplete}\n      />\n      {/* possible usage: user (twitter) controlled photo session\n      <PhotoRecorder\n        videoRef={videoRef}\n        showPreview={showPreviews}\n        captureDelay={captureDelay}\n        isCapturing={isCapturing}\n      /> */}\n\n      <PhotoStream\n        videoRef={videoRef}\n        showPreview={showPreviews}\n        streamDelay={streamDelay}\n        isStreaming={isStreaming}\n      />\n      <br />\n      <h3>local state:</h3>\n      {JSON.stringify(localStateMonitor, null, 2)}\n\n      <h3>db state</h3>\n      {JSON.stringify(dbCommands, null, 2)}\n\n      {/* <VideoList /> */}\n      <BrightnessDetector\n        videoRef={videoRef}\n        isDetecting={isDetecting}\n        delay={DELAY}\n        onDetect={v => setIsDay(v.bright)}\n      />\n    </div>\n  );\n};\n\nexport default CameraComponent;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport RiceCam from \"./components/RiceCam\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <p>v1.1</p>\n        <br />\n        <RiceCam />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}