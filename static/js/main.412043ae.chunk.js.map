{"version":3,"sources":["components/Camera/Show.module.css","logo.svg","components/customHooks/useInterval.js","components/Camera/Camera.js","components/Camera/index.js","components/Database/lib/firebase.js","components/Database/index.js","components/MediaRecorder/index.js","components/MediaRecorder/VideoRecorder.js","components/BrightnessPredictor/helpers/index.js","components/BrightnessPredictor/index.js","components/BrightnessPredictor/BrightnessDetector.js","components/RiceCam/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gallery","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","SETTINGS","width","height","facingMode","WebcamComponent","_ref","onRef","webcamRef","_useState","useState","_useState2","Object","slicedToArray","cameraReady","setCameraReady","setupCamera","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e1","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","_this","setState","error_messages","video","onloadedmetadata","stop","apply","this","arguments","react_default","createElement","react_webcam_default","audio","ref","screenshotFormat","videoConstraints","Camera","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","keys","map","v","concat","firebase","apps","length","initializeApp","dayjs","locale","logging","message","timestamp","format","daystamp","firestore","collection","doc","set","merge","then","catch","e","console","log","activityMonitor","convertToObject","browserStorage","estimate","mem","ram","connection","connectionSpeed","battery","batteryLevel","performance","output","input","showFunction","obj","storage","sent","usage","quota","percent","toFixed","window","memory","deviceMemory","mozConnection","webkitConnection","msConnection","effectiveType","getBattery","level","network","browserMemory","objectSpread","totalJSHeapSize","jsHeapSizeLimit","comment","status","_x","grabListOfVideoPaths","_ref3","_callee4","day","_context4","get","_ref4","_callee3","querySnapshot","_context3","forEach","_ref5","_callee2","url","_context2","data","getDownloadURL","src","push","abrupt","_x4","_x3","_x2","Record","videoRef","triggerRecording","duration","onComplete","showPreview","OPTIONS","videoOut","setVideoOut","_useState3","_useState4","recordDuration","setRecordDuration","_useState5","_useState6","isRecording","_useState7","_useState8","_useState9","_useState10","videoChunk","setVideoChunk","record","makeLink","blob","Blob","type","URL","createObjectURL","out","key","controls","href","download","toConsumableArray","stream","active","recorder","MediaRecorder","ondataavailable","onstart","setTimeout","start","style","display","listStyleType","overflowX","loadModel","tf","predictBrightness","rgbarray","model","xs","Array","from","inputXS","preds","predict","print","arraySync","isBright","canvas","clrs","flat","res","getContext","getImageData","BrightnessDetector","isDetecting","onDetect","detectionDelay","setDetectionDelay","detect","bright","document","drawImage","VideoList","vlist","setVlist","Fragment","whiteSpace","fontSize","overflow","i","margin","CameraComponent","_ref4$showPreviews","showPreviews","setVideoRef","_useState11","_useState12","logs","setLogs","_useState13","_useState14","isDay","setIsDay","handleLog","slice","_useState15","_useState16","setIsDetecting","_useState17","_useState18","setIsRecording","_useState19","_useState20","videoDuration","setVideoDuration","_useState21","_useState22","isRecordingContinuously","setIsRecordingContinuously","t","EVERY_N_MINS","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","dbCommands","setDBCommands","onChange","onSnapshot","JSON","stringify","handleRecordContinuous","setContinuousRecording","handleSetVideoDuration","videoDurationSec","amount","run","videoHeight","videoWidth","backgroundColor","components_Camera","onClick","l","color","components_MediaRecorder","vidBlob","put","location","path","err","pushVideoDataToStorage","RiceCam_VideoList","BrightnessPredictor","App","className","RiceCam","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.412043ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Show_gallery__34GpT\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst SETTINGS = {\n  width: 800,\n  height: 800,\n  facingMode: \"environment\"\n};\n\nconst WebcamComponent = ({ onRef }) => {\n  const webcamRef = useRef();\n  const [cameraReady, setCameraReady] = useState(false);\n  const setupCamera = async () => {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const video = webcamRef.current.video;\n    video.onloadedmetadata = () => {\n      setCameraReady(true);\n    };\n  };\n\n  useEffect(() => {\n    setupCamera();\n  }, [webcamRef]);\n\n  if (cameraReady) {\n    onRef && onRef(webcamRef);\n  }\n\n  return (\n    <Webcam\n      audio={false}\n      ref={webcamRef}\n      screenshotFormat=\"image/jpeg\"\n      videoConstraints={SETTINGS}\n      height={400}\n      width={400}\n    />\n  );\n};\n\nexport default WebcamComponent;\n","import Camera from \"./Camera\";\nimport Show from \"./Show\";\n\nexport default Camera;\nexport const Gallery = Show;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nconst PushToFirebase = (databaseRef = \"test\", data, callback) => {\n  firebase\n    .database()\n    .ref(databaseRef)\n    .push(data)\n    .then(v => callback(v));\n};\n\nconst PushToFirestore = (databaseRef = \"test\", data, callback) => {\n  const db = firebase.firestore();\n  db.collection(databaseRef);\n};\n\nconst sortTimestampArray = (data, latest = false) => {\n  if (latest) return data.sort((prev, next) => dayjs(next) - dayjs(prev));\n  // latest first\n  else return data.sort((prev, next) => dayjs(prev) - dayjs(next)); // earliest first\n};\n\nexport const logging = (message, callback) => {\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"logs\")\n    .doc(timestamp)\n    .set({ message: message }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const activityMonitor = async callback => {\n  function convertToObject(input, showFunction) {\n    // recursively\n    // https://stackoverflow.com/questions/37733272/convert-dom-object-to-javascript-object\n    let obj = {};\n    for (var p in input) {\n      switch (typeof input[p]) {\n        case \"function\":\n          if (showFunction) obj[p] = `function: ${input[p]}`;\n          break;\n        case \"object\":\n          obj[p] = convertToObject(input[p], showFunction);\n          break;\n        case \"number\":\n          obj[p] = input[p];\n          break;\n        default:\n          obj[p] = input[p];\n      }\n    }\n    return obj;\n  }\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  // browser tab storage\n  let browserStorage;\n  if (\"storage\" in navigator && \"estimate\" in navigator.storage) {\n    const estimate = await navigator.storage.estimate();\n    browserStorage = {\n      usage: estimate.usage,\n      quota: estimate.quota,\n      percent: `${((estimate.usage * 100) / estimate.quota).toFixed(0)} used`\n    };\n  } else {\n    browserStorage = \"browser does not have storage API\";\n  }\n  // js heap size\n  //   This API returns three pieces of data:\n  // jsHeapSizeLimit - The amount of memory (in bytes) that the JavaScript heap is limited to.\n  // totalJSHeapSize - The amount of memory (in bytes) that the JavaScript heap has allocated including free space.\n  // usedJSHeapSize - The amount of memory (in bytes) currently being used.\n  const mem = window.performance.memory || {};\n  // RAM\n  const ram =\n    `${navigator.deviceMemory} GB` ||\n    \"browser does not have deviceMemory API (ram)\";\n  // network speed\n  const connection =\n    navigator.connection ||\n    navigator.mozConnection ||\n    navigator.webkitConnection ||\n    navigator.msConnection;\n  const connectionSpeed = connection\n    ? connection.effectiveType\n    : \"browser does not have connection API\";\n  // battery\n  let battery;\n  if (\"getBattery\" in navigator) {\n    battery = await navigator.getBattery();\n  }\n  const batteryLevel = battery\n    ? battery.level\n    : \"browser does not have battery API\";\n  // general performance\n  // .toJSON() is unreliable, returns custom objects\n  const performance = convertToObject(window.performance, false);\n\n  const output = {\n    storage: browserStorage,\n    ram: ram,\n    network: connectionSpeed,\n    battery: batteryLevel,\n    performance: performance,\n    browserMemory: {\n      ...convertToObject(mem, false),\n      usage: `${(mem.totalJSHeapSize / mem.jsHeapSizeLimit) * 100} percent`,\n      comment:\n        \"units in bytes. percent is percent of allocated browser memory (multiple tabs included)\"\n    }\n  };\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"browser performance logs\")\n    .doc(timestamp)\n    .set({ status: output }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const pushImageDataToStorage = imgBlob => {\n  const imgFolder = \"images\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${imgFolder}/${timestamp}.png`)\n    .put(imgBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      firebase\n        .firestore()\n        .collection(\"imageURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path });\n    })\n    .catch(e => {\n      const err = `pushImageDataToStorage: ERROR ${e}`;\n      logging(err, () => console.log(err));\n    });\n};\n\nexport const pushVideoDataToStorage = vidBlob => {\n  const vidFolder = \"videos\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${vidFolder}/${timestamp}.mp4`)\n    .put(vidBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      const dbRef = firebase\n        .firestore()\n        .collection(\"videoURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path })\n        .then(v => {\n          const l = `pushVideoDataToStorage: COMPLETE video:${vidFolder}/${timestamp}.mp4, ref: ${path}, callback: ${v}`;\n          logging(l, () => console.log(l));\n        });\n    })\n    .catch(e => {\n      const err = `pushVideoDataToStorage: ERROR ${e}`;\n      logging(err, () => console.log(err));\n    });\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .get()\n    .then(async querySnapshot => {\n      let output = [];\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        // console.log(url);\n\n        return await firebase\n          .storage()\n          .ref(url)\n          .getDownloadURL()\n          .then(src => {\n            // and here are your downloadable urls\n            // console.log(\"downloadable url: \", src);\n            output.push(src);\n          });\n      });\n\n      //console.log(\"returning output! \", output);\n      return output;\n    });\n};\n\n// single call\nexport const pullAppStateFromDB = () => {\n  firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .get()\n    .then(doc => {\n      console.log(doc.data());\n    });\n};\n\n// listener function\nexport const listenToDBAppState = onChange => {\n  return firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .onSnapshot(doc => {\n      onChange && onChange(doc.data());\n      return doc.data();\n    });\n};\n\nexport const FireStoreState = ({\n  collection = \"appState\",\n  doc = \"commands\",\n  onUpdate\n}) => {\n  const [dbState, setDBState] = useState({});\n\n  useEffect(() => {\n    firebase\n      .collection(collection)\n      .doc(doc)\n      .onSnapshot(snapshot => {\n        setDBState(snapshot.data());\n      });\n    return () => setDBState({});\n  }, []);\n\n  useEffect(() => {\n    if (onUpdate) onUpdate(dbState);\n  }, [dbState]);\n\n  return <p>db state: {JSON.stringify(dbState, null, 2)}</p>;\n};\n\nconst deleteImageDataFromDBRecords = () => {\n  // delete by timestamp based on prediction\n  const imgCollection = \"imageData\";\n};\n\nconst createVideoFromDBRecords = () => {\n  // pull in data from DB and construct video\n  const imgCollection = \"imageData\";\n  const predCollection = \"\";\n};\n\nconst getPredictionsFromDB = () => {\n  // predictions should return together with the references UID from imageData\n  // as well as timestamp\n  const collectionName = \"predictions\";\n};\n","import Record from \"./VideoRecorder\";\n\nexport default Record;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { logging } from \"../Database\";\n\nconst VideoRecorder = ({\n  videoRef,\n  triggerRecording,\n  duration,\n  onComplete,\n  showPreview\n}) => {\n  const OPTIONS = {\n    tag: \"video\",\n    type: \"video/webm\",\n    ext: \".mp4\",\n    gUM: { video: true, audio: true }\n  };\n  const [videoOut, setVideoOut] = useState(\"\");\n\n  const [recordDuration, setRecordDuration] = useState(5000);\n  useEffect(() => {\n    if (duration && typeof duration === \"number\") setRecordDuration(duration);\n  }, [duration]);\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoRecordings, setVideoRecordings] = useState([]);\n  const [videoChunk, setVideoChunk] = useState([]);\n  const ulRef = useRef();\n  useEffect(() => {\n    if (triggerRecording === true && isRecording === false) {\n      logging(\"VideoRecorder: START starting one recording\");\n      record({ duration: recordDuration });\n    }\n  }, [triggerRecording, isRecording]);\n\n  useEffect(() => {\n    // if there is a recording\n    if (videoChunk.length > 0) {\n      console.log(\"making link!\", videoChunk);\n      showPreview && makeLink();\n    }\n  }, [videoChunk]);\n\n  const makeLink = () => {\n    let blob = new Blob(videoChunk, { type: OPTIONS.type });\n\n    let url = URL.createObjectURL(blob);\n\n    const out = (\n      <li key={url}>\n        <video height={200} controls src={url} />\n        <br />\n        <a href={url} download={`video${OPTIONS.ext}`}>{`download ${`video${\n          OPTIONS.ext\n        }`}`}</a>\n      </li>\n    );\n    setVideoOut([...videoOut, out]);\n  };\n\n  const record = ({ duration = 2000 }) => {\n    if (videoRef) {\n      const stream = videoRef.current.stream;\n      if (!stream.active) {\n        console.log(\"media stream is not active.\", stream);\n      }\n\n      // setup recorder\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = e => {\n        // when the recording is complete and there is data\n        setVideoChunk([e.data]);\n        if (onComplete) onComplete(e.data);\n      };\n      recorder.onstart = e => {\n        setVideoChunk([]);\n        setTimeout(() => {\n          recorder.stop();\n        }, recordDuration);\n      };\n\n      // run recorder\n      recorder.start();\n    }\n  };\n\n  return (\n    <ul\n      style={{\n        display: \"flex\",\n        listStyleType: \"none\",\n        width: \"100%\",\n        overflowX: \"scroll\"\n      }}\n    >\n      {videoOut}\n    </ul>\n  );\n};\n\nexport default VideoRecorder;\n","import * as tf from \"@tensorflow/tfjs\";\n\nconst WIDTH = 12;\nconst HEIGHT = 9;\nconst ARR_LENGTH = 432;\n\nconst loadModel = async () => {\n  return await tf.loadLayersModel(\"assets/model/brightness-predictor.json\");\n};\n\nconst predictBrightness = async rgbarray => {\n  const model = await loadModel();\n\n  if (model) {\n    return await tf.tidy(() => {\n      const xs = [Array.from(rgbarray)];\n      const inputXS = tf.tensor2d(xs, [xs.length, ARR_LENGTH]);\n\n      console.log(inputXS);\n\n      const preds = model.predict(inputXS);\n\n      preds.print();\n\n      const out = preds.arraySync()[0][0];\n\n      return out;\n    });\n  }\n};\n\n// sml model learning bright and dark\nexport const isBright = async canvas => {\n  const clrs = canvas\n    .getContext(\"2d\")\n    .getImageData(0, 0, canvas.width, canvas.height);\n\n  console.log(clrs);\n\n  const flat = clrs.data;\n  const res = await predictBrightness(flat);\n  console.log(res);\n  return res > 0.6 ? true : false;\n};\n\nexport default isBright;\n","import BrightnessDetector from \"./BrightnessDetector\";\n\nexport default BrightnessDetector;\n","import { useState, useEffect } from \"react\";\nimport useInterval from \"../customHooks/useInterval\";\n\nimport { isBright } from \"./helpers\";\n\nconst BrightnessDetector = ({ videoRef, isDetecting, delay, onDetect }) => {\n  // local ML brightness detection\n  const [detectionDelay, setDetectionDelay] = useState(500);\n  useEffect(() => {\n    if (delay && typeof delay === \"number\") setDetectionDelay(delay);\n  }, [delay]);\n\n  useInterval(\n    () => {\n      detect();\n    },\n    isDetecting ? detectionDelay : null\n  );\n  const detect = async () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 12;\n      canvas.height = 9;\n      // TODO: check if canvas is drawing entire image, or is it cut off\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // check brightness\n      const bright = await isBright(canvas);\n      if (onDetect) {\n        onDetect({ bright: bright });\n      }\n    }\n  };\n  return null;\n};\n\nexport default BrightnessDetector;\n","// https://ml5js.org/docs/image-classification-example\n// https://codelabs.developers.google.com/?cat=TensorFlow\n// https://console.firebase.google.com/u/3/project/operation-verde-ricecam/database\n\nimport React, { useState, useEffect, useRef } from \"react\";\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\n\nimport useInterval from \"../customHooks/useInterval\";\nimport Camera, { Gallery } from \"../Camera\";\nimport VideoRecorder from \"../MediaRecorder\";\nimport BrightnessDetector from \"../BrightnessPredictor\";\nimport {\n  pushImageDataToStorage,\n  pushVideoDataToStorage,\n  pullAppStateFromDB,\n  listenToDBAppState,\n  grabListOfVideoPaths,\n  logging,\n  activityMonitor\n} from \"../Database\";\n\nimport { download, convertToArray, convertToObject } from \"../atoms\";\n\ndayjs.locale(\"ja\");\nconst SCALE = 1;\nconst RGB_SCALE = 0.02;\nconst DETECT_SCALE = 0.02;\nconst STREAM_SCALE = 1;\nconst MONITOR_SCALE = 0.1;\n\nconst PhotoRecorder = ({ videoRef, captureDelay, isCapturing, onRecord }) => {\n  useInterval(\n    () => {\n      capture();\n    },\n    isCapturing ? captureDelay : null\n  );\n\n  const [data, setData] = useState([]);\n  const [rgb, setRGB] = useState([]);\n  const capture = () => {\n    let out = {\n      b64: \"\",\n      rgbArray: []\n    };\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * SCALE;\n      canvas.height = video.videoHeight * SCALE;\n      // canvas.width = 12;\n      // canvas.height = 9;\n\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n      out.b64 = [...data, b64];\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      canvas.width = video.videoWidth * RGB_SCALE;\n      canvas.height = video.videoHeight * RGB_SCALE;\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // rgb array (flat)\n      const clrs = context.getImageData(0, 0, canvas.width, canvas.height);\n      console.log(clrs);\n      const flat = convertToArray(clrs.data);\n\n      setRGB([...rgb, flat]);\n      out.rgbArray = [...rgb, flat];\n      // download(JSON.stringify({ data: flat }), \"temp.json\", \"application/json\");\n\n      onRecord && onRecord(out);\n\n      return data;\n    }\n  };\n\n  return <p>capturing: {isCapturing}</p>;\n};\n\nconst PhotoStream = ({ videoRef, streamDelay, isStreaming }) => {\n  useInterval(\n    () => {\n      stream();\n    },\n    isStreaming ? streamDelay : null\n  );\n  const stream = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * STREAM_SCALE;\n      canvas.height = video.videoHeight * STREAM_SCALE;\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // preview\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      // setData([...data, b64]);\n\n      // blob it to send to db\n      // blobbing takes a long time therefore there is a callback\n      canvas.toBlob(b => {\n        console.log(b);\n        pushImageDataToStorage(b);\n      });\n    }\n  };\n\n  return <p>streaming: {isStreaming}</p>;\n};\n\nconst Timer = ({ start, end, onDetect }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const startTimestamp = dayjs(start);\n  const endTimestamp = dayjs(end);\n\n  console.log(timestamp, startTimestamp, endTimestamp);\n};\n\nconst VideoList = () => {\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n\n  useEffect(() => {\n    grabListOfVideoPaths().then(v => {\n      console.log(\"paths\");\n      console.log(v);\n      setVlist(v);\n    });\n  }, []);\n\n  return (\n    <>\n      <h3>current list of videos today ({vlist.length}): </h3>\n      <ul\n        style={{\n          whiteSpace: \"nowrap\",\n          fontSize: \"0.5rem\",\n          listStyleType: \"none\",\n          height: 300,\n          overflow: \"scroll\"\n        }}\n      >\n        {vlist.map((v, i) => {\n          return (\n            <li key={i} style={{ margin: \"5px 0\" }}>\n              <a href={v}>{v}</a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst CameraComponent = ({ showPreviews = false }) => {\n  const [videoRef, setVideoRef] = useState();\n  const [logs, setLogs] = useState([]);\n  const [isDay, setIsDay] = useState(true);\n  // log messages\n  const handleLog = message => {\n    setLogs([...logs.slice(-4), message]);\n    logging(message, v => console.log(\"LOGGER: completed. \", v));\n  };\n  // log browser status\n  const ACTIVITY_MONITOR_INTERVAL = 60000;\n  useInterval(() => {\n    console.log(\"logging browser performance\");\n    activityMonitor();\n  }, ACTIVITY_MONITOR_INTERVAL);\n\n  // local ML brightness detector\n  const [isDetecting, setIsDetecting] = useState(false);\n  const DELAY = 1000;\n  // video recorder\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(5000);\n\n  // timer for multiple video records\n  const [isRecordingContinuously, setIsRecordingContinuously] = useState(false);\n  const EVERY_N_MINS = 5;\n  const RECORDING_INTERVALS = EVERY_N_MINS * 60000;\n  useInterval(\n    () => {\n      const t = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n\n      if (!isRecording) {\n        handleLog(`recording video at ${t}`);\n        setIsRecording(true);\n      } else {\n        handleLog(\"recording still underway, not setting recording to true\");\n      }\n    },\n    isRecordingContinuously ? RECORDING_INTERVALS : null\n  );\n\n  // local capture\n  const [captureDelay, setCaptureDelay] = useState(1000);\n  const [isCapturing, setIsCapturing] = useState(false);\n  // db streaming for images\n  const [streamDelay, setStreamDelay] = useState(100);\n  const [isStreaming, setIsStreaming] = useState(false);\n\n  // listen to DB commands\n  const [dbCommands, setDBCommands] = useState({});\n  useEffect(() => {\n    console.log(\"listening to DB!\");\n    listenToDBAppState(setDBCommands);\n  }, []);\n\n  console.log(dbCommands);\n\n  // set commands according to db\n  useEffect(() => {\n    if (dbCommands) {\n      handleLog(`commands received: ${JSON.stringify(dbCommands)}`);\n      handleRecordContinuous(dbCommands.setContinuousRecording);\n      handleSetVideoDuration(dbCommands.videoDurationSec);\n    }\n  }, [dbCommands]);\n\n  // --------\n  // TESTING\n  // --------\n\n  // const captureOne = () => {\n  //   setIsCapturing(true);\n  //   setTimeout(() => {\n  //     setIsCapturing(false);\n  //   }, 1100);\n  // };\n\n  // const capture5sec = () => {\n  //   setIsCapturing(true);\n  //   setTimeout(() => {\n  //     setIsCapturing(false);\n  //   }, 5000);\n  // };\n\n  // const capture5secvideo = () => {\n  //   setCaptureDelay(1);\n  //   setIsCapturing(true);\n  //   setTimeout(() => {\n  //     setIsCapturing(false);\n  //     setCaptureDelay(1000);\n  //   }, 5000);\n  // };\n\n  // const sendToDB = () => {\n  //   // push to firebase\n  //   pushImageDataToStorage();\n  // };\n\n  const streamToDB = () => {\n    // toggle\n    handleLog(\"streaming images to database!\");\n    if (!isStreaming) {\n      console.log(\"capturing!\");\n      setStreamDelay(1);\n      setIsStreaming(true);\n    } else {\n      console.log(\"stopping!\");\n      setIsStreaming(false);\n      setStreamDelay(1000);\n    }\n  };\n\n  // const handleRecord1Hour = () => {\n  //   const OneHourInMS = 3600000;\n  //   setIsRecording(true);\n  //   setIsRecordingContinuously(true);\n  //   setTimeout(() => {\n  //     setIsRecordingContinuously(false);\n  //   }, OneHourInMS);\n  // };\n\n  const handleSetVideoDuration = amount => {\n    setVideoDuration(amount);\n  };\n\n  const handleRecordContinuous = run => {\n    if (run) {\n      handleLog(\"recording forever!\");\n      setIsRecording(true);\n      setIsRecordingContinuously(true);\n    } else {\n      setIsRecording(false);\n      setIsRecordingContinuously(false);\n    }\n  };\n\n  const handleToggleDetect = () => {\n    setIsDetecting(!isDetecting);\n  };\n\n  const handleVideoComplete = vidBlob => {\n    console.log(vidBlob);\n    pushVideoDataToStorage(vidBlob);\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    if (videoRef) {\n      const video = videoRef.current.video;\n      video.height = video.videoHeight * MONITOR_SCALE;\n      video.width = video.videoWidth * MONITOR_SCALE;\n      console.log(videoRef.current.video);\n    }\n  }, [videoRef]);\n\n  return (\n    <div style={{ backgroundColor: isDay ? \"white\" : \"#282c34\" }}>\n      <Camera onRef={setVideoRef} />\n\n      <br />\n      <code>debug buttons: </code>\n      {/* <button onClick={captureOne}>capture</button>\n      <button onClick={capture5sec}>capture5sec</button>\n      <button onClick={capture5secvideo}>capture5sec video</button>\n      <button onClick={downloadAsJson}>download data as json</button>\n      <button onClick={sendToDB}>push to database</button> */}\n      <button\n        onClick={async () => {\n          const l = await grabListOfVideoPaths();\n          console.log(l);\n          console.log(typeof l);\n        }}\n      >\n        list videos recorded today\n      </button>\n      {/* <button onClick={streamToDB}>toggle stream to database</button> */}\n      <button onClick={handleToggleDetect}>toggle brightness detection</button>\n      <button\n        style={{ color: isRecording ? \"red\" : \"black\" }}\n        onClick={() => setIsRecording(!isRecording)}\n      >\n        record 5 sec\n      </button>\n      {/* <button onClick={handleRecord1Hour}>\n        record 5 sec videos for 1 hour\n      </button> */}\n      <button onClick={handleRecordContinuous}>\n        record 5 sec indefinitely\n      </button>\n      <br />\n      <ul>\n        {logs.map((v, i) => (\n          <li key={i}>{v}</li>\n        ))}\n      </ul>\n\n      <br />\n      {/* {showPreviews && <Gallery data={data} />} */}\n      <VideoRecorder\n        videoRef={videoRef}\n        triggerRecording={isRecording}\n        duration={videoDuration}\n        showPreview={showPreviews}\n        onComplete={handleVideoComplete}\n      />\n      {/* possible usage: user (twitter) controlled photo session\n      <PhotoRecorder\n        videoRef={videoRef}\n        showPreview={showPreviews}\n        captureDelay={captureDelay}\n        isCapturing={isCapturing}\n      /> */}\n\n      {/* possible usage: debug\n      <PhotoStream\n        videoRef={videoRef}\n        showPreview={showPreviews}\n        streamDelay={streamDelay}\n        isStreaming={isStreaming}\n      /> */}\n\n      <VideoList />\n      <BrightnessDetector\n        videoRef={videoRef}\n        isDetecting={isDetecting}\n        delay={DELAY}\n        onDetect={v => setIsDay(v.bright)}\n      />\n    </div>\n  );\n};\n\nexport default CameraComponent;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport RiceCam from \"./components/RiceCam\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <RiceCam />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}