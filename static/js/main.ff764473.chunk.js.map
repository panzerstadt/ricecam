{"version":3,"sources":["components/Camera/Show.module.css","logo.svg","components/customHooks/useInterval.js","components/Camera/Camera.js","components/Camera/index.js","components/Database/lib/firebase.js","components/Database/index.js","components/MediaRecorder/index.js","components/MediaRecorder/VideoRecorder.js","components/BrightnessPredictor/helpers/index.js","components/BrightnessPredictor/index.js","components/BrightnessPredictor/BrightnessDetector.js","components/RiceCam/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gallery","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","SETTINGS","width","height","facingMode","WebcamComponent","_ref","onRef","webcamRef","_useState","useState","_useState2","Object","slicedToArray","cameraReady","setCameraReady","setupCamera","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e1","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","_this","setState","error_messages","video","onloadedmetadata","stop","apply","this","arguments","react_default","createElement","react_webcam_default","audio","ref","screenshotFormat","videoConstraints","Camera","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","keys","map","v","concat","firebase","apps","length","initializeApp","console","log","dayjs","locale","logging","message","timestamp","format","daystamp","firestore","collection","doc","set","merge","then","catch","e","activityMonitor","convertToObject","browserStorage","estimate","mem","ram","connection","connectionSpeed","battery","batteryLevel","performance","output","input","showFunction","obj","storage","sent","usage","quota","percent","toFixed","window","memory","deviceMemory","mozConnection","webkitConnection","msConnection","effectiveType","getBattery","level","network","browserMemory","objectSpread","totalJSHeapSize","jsHeapSizeLimit","comment","status","_x","grabListOfVideoPaths","_ref3","_callee4","day","_context4","get","_ref4","_callee3","querySnapshot","_context3","forEach","_ref5","_callee2","url","_context2","data","push","getDownloadURL","_x4","abrupt","Promise","all","_x3","_x2","Record","videoRef","triggerRecording","duration","onComplete","showPreview","OPTIONS","videoOut","setVideoOut","_useState3","_useState4","recordDuration","setRecordDuration","_useState5","_useState6","isRecording","_useState7","_useState8","_useState9","_useState10","videoChunk","setVideoChunk","record","makeLink","blob","Blob","type","URL","createObjectURL","out","key","controls","src","href","download","toConsumableArray","stream","active","recorder","MediaRecorder","ondataavailable","onstart","setTimeout","start","style","display","listStyleType","overflowX","loadModel","tf","predictBrightness","rgbarray","model","xs","Array","from","inputXS","preds","predict","print","arraySync","isBright","canvas","clrs","flat","res","getContext","getImageData","BrightnessDetector","isDetecting","onDetect","detectionDelay","setDetectionDelay","detect","bright","document","drawImage","PhotoStream","streamDelay","isStreaming","videoWidth","videoHeight","toDataURL","toBlob","b","imgBlob","put","location","path","err","JSON","stringify","pushImageDataToStorage","isWithinTimeRange","end","sH","slice","sM","startTimestamp","hour","minute","eH","eM","endTimestamp","chk1","isAfter","chk2","isBefore","VideoList","toggleRefresh","vlist","setVlist","names","decodeURIComponent","split","Fragment","whiteSpace","fontSize","overflow","i","margin","textAlign","CameraComponent","_ref5$showPreviews","showPreviews","setVideoRef","logs","setLogs","_useState11","_useState12","isDay","setIsDay","handleLog","_useState13","_useState14","setIsDetecting","_useState15","_useState16","setIsRecording","_useState17","_useState18","videoDuration","setVideoDuration","_useState19","_useState20","timer","setTimer","_useState21","_useState22","isRecordingContinuously","setIsRecordingContinuously","_useState23","_useState24","cameraName","setCameraName","_useState25","_useState26","recordIntervalMin","setRecordIntervalMin","t","_useState27","_useState28","dbCommands","setDBCommands","onChange","onSnapshot","handleRecordContinuous","run","setContinuousRecording","setLocalStateMonitor","isContinuouslyRecording","mins","amount","time","timerStart","timerEnd","isTimerSet","videoDurationSec","videoRecordFreqMin","_useState29","nextRecordingTime","_useState30","localStateMonitor","currentState","_useState31","_useState32","_useState33","_useState34","setIsStreaming","debugStreamImages","_useState35","_useState36","refreshVideo","toggleRefreshVideo","_useState37","_useState38","isShowingDebug","toggleIsShowingDebug","videoLengthSec","backgroundColor","components_Camera","padding","color","fontWeight","onClick","disabled","target","value","RiceCam_VideoList","marginBottom","RiceCam_PhotoStream","components_MediaRecorder","vidBlob","namePrefix","undefined","l","pushVideoDataToStorage","BrightnessPredictor","App","className","RiceCam","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff764473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Show_gallery__qu3hA\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst SETTINGS = {\n  width: 1080,\n  height: 1080,\n  facingMode: \"environment\"\n};\n\nconst WebcamComponent = ({ onRef }) => {\n  const webcamRef = useRef();\n  const [cameraReady, setCameraReady] = useState(false);\n  const setupCamera = async () => {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const video = webcamRef.current.video;\n    video.onloadedmetadata = () => {\n      setCameraReady(true);\n    };\n  };\n\n  useEffect(() => {\n    setupCamera();\n  }, [webcamRef]);\n\n  if (cameraReady) {\n    onRef && onRef(webcamRef);\n  }\n\n  return (\n    <Webcam\n      audio={false}\n      ref={webcamRef}\n      screenshotFormat=\"image/jpeg\"\n      videoConstraints={SETTINGS}\n      height={400}\n      width={400}\n    />\n  );\n};\n\nexport default WebcamComponent;\n","import Camera from \"./Camera\";\nimport Show from \"./Show\";\n\nexport default Camera;\nexport const Gallery = Show;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId,\n};\n\nconst reactConfig = {};\nObject.keys(config).map((v) => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n  console.log(\"DATABASE CONNECTED.\");\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nconst PushToFirebase = (databaseRef = \"test\", data, callback) => {\n  firebase\n    .database()\n    .ref(databaseRef)\n    .push(data)\n    .then(v => callback(v));\n};\n\nconst PushToFirestore = (databaseRef = \"test\", data, callback) => {\n  const db = firebase.firestore();\n  db.collection(databaseRef);\n};\n\nconst sortTimestampArray = (data, latest = false) => {\n  if (latest) return data.sort((prev, next) => dayjs(next) - dayjs(prev));\n  // latest first\n  else return data.sort((prev, next) => dayjs(prev) - dayjs(next)); // earliest first\n};\n\nexport const logging = (message, callback) => {\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"logs\")\n    .doc(timestamp)\n    .set({ message: message }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const activityMonitor = async callback => {\n  function convertToObject(input, showFunction) {\n    // recursively\n    // https://stackoverflow.com/questions/37733272/convert-dom-object-to-javascript-object\n    let obj = {};\n    for (var p in input) {\n      switch (typeof input[p]) {\n        case \"function\":\n          if (showFunction) obj[p] = `function: ${input[p]}`;\n          break;\n        case \"object\":\n          obj[p] = convertToObject(input[p], showFunction);\n          break;\n        case \"number\":\n          obj[p] = input[p];\n          break;\n        default:\n          obj[p] = input[p];\n      }\n    }\n    return obj;\n  }\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  // browser tab storage\n  let browserStorage;\n  if (\"storage\" in navigator && \"estimate\" in navigator.storage) {\n    const estimate = await navigator.storage.estimate();\n    browserStorage = {\n      usage: estimate.usage,\n      quota: estimate.quota,\n      percent: `${((estimate.usage * 100) / estimate.quota).toFixed(0)} used`\n    };\n  } else {\n    browserStorage = \"browser does not have storage API\";\n  }\n  // js heap size\n  //   This API returns three pieces of data:\n  // jsHeapSizeLimit - The amount of memory (in bytes) that the JavaScript heap is limited to.\n  // totalJSHeapSize - The amount of memory (in bytes) that the JavaScript heap has allocated including free space.\n  // usedJSHeapSize - The amount of memory (in bytes) currently being used.\n  const mem = window.performance.memory || {};\n  // RAM\n  const ram =\n    `${navigator.deviceMemory} GB` ||\n    \"browser does not have deviceMemory API (ram)\";\n  // network speed\n  const connection =\n    navigator.connection ||\n    navigator.mozConnection ||\n    navigator.webkitConnection ||\n    navigator.msConnection;\n  const connectionSpeed = connection\n    ? connection.effectiveType\n    : \"browser does not have connection API\";\n  // battery\n  let battery;\n  if (\"getBattery\" in navigator) {\n    battery = await navigator.getBattery();\n  }\n  const batteryLevel = battery\n    ? battery.level\n    : \"browser does not have battery API\";\n  // general performance\n  // .toJSON() is unreliable, returns custom objects\n  const performance = convertToObject(window.performance, false);\n\n  const output = {\n    storage: browserStorage,\n    ram: ram,\n    network: connectionSpeed,\n    battery: batteryLevel,\n    performance: performance,\n    browserMemory: {\n      ...convertToObject(mem, false),\n      usage: `${(mem.totalJSHeapSize / mem.jsHeapSizeLimit) * 100} percent`,\n      comment:\n        \"units in bytes. percent is percent of allocated browser memory (multiple tabs included)\"\n    }\n  };\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"browser performance logs\")\n    .doc(timestamp)\n    .set({ status: output }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const pushImageDataToStorage = imgBlob => {\n  const imgFolder = \"images\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"pushing Image blob: \", imgBlob);\n  firebase\n    .storage()\n    .ref(`${imgFolder}/${timestamp}.png`)\n    .put(imgBlob)\n    .then(res => {\n      console.log(`image blob pushed to: ${res.ref.location.path}`, res);\n      const path = res.ref.location.path;\n      firebase\n        .firestore()\n        .collection(\"imageURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path });\n    })\n    .catch(e => {\n      const err = `pushImageDataToStorage: ERROR ${JSON.stringify(e)}`;\n      console.log(err);\n      logging(err);\n    });\n};\n\nexport const pushVideoDataToStorage = (\n  vidBlob,\n  namePrefix = \"\",\n  onComplete\n) => {\n  const vidFolder = \"videos\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${vidFolder}/${namePrefix}-${timestamp}.mp4`)\n    .put(vidBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      firebase\n        .firestore()\n        .collection(\"videoURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path })\n        .then(v => {\n          const l = `pushVideoDataToStorage: COMPLETE video:${vidFolder}/${timestamp}.mp4, ref: ${path}, callback: ${v}`;\n          logging(l, () => console.log(l));\n          onComplete && onComplete();\n        });\n    })\n    .catch(e => {\n      const err = `pushVideoDataToStorage: ERROR ${JSON.stringify(e)}`;\n      logging(err, () => console.log(err));\n    });\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .get()\n    .then(async querySnapshot => {\n      let output = [];\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        // console.log(url);\n\n        output.push(\n          firebase\n            .storage()\n            .ref(url)\n            .getDownloadURL() // this is an async function\n        );\n      });\n      return Promise.all(output);\n    });\n};\n\n// single call\nexport const pullAppStateFromDB = () => {\n  firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .get()\n    .then(doc => {\n      console.log(doc.data());\n    })\n    .catch(e => console.log(\"REMOTE DB STATE READ ERROR: \", e));\n};\n\n// listener function\nexport const listenToDBAppState = onChange => {\n  return firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .onSnapshot(doc => {\n      onChange && onChange(doc.data());\n      return doc.data();\n    });\n};\n// notify function\nexport const reportAppStatetoDB = currentState => {\n  firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"currentState\")\n    .set(currentState, { merge: true })\n    .then(v => console.log(\"REMOTE STATE UPDATER: complete. \", v))\n    .catch(e => console.log(\"REMOTE DB STATE UPDATE ERROR: \", e));\n};\n\nexport const FireStoreState = ({\n  collection = \"appState\",\n  doc = \"commands\",\n  onUpdate\n}) => {\n  const [dbState, setDBState] = useState({});\n\n  useEffect(() => {\n    firebase\n      .collection(collection)\n      .doc(doc)\n      .onSnapshot(snapshot => {\n        setDBState(snapshot.data());\n      });\n    return () => setDBState({});\n  }, []);\n\n  useEffect(() => {\n    if (onUpdate) onUpdate(dbState);\n  }, [dbState]);\n\n  return <p>db state: {JSON.stringify(dbState, null, 2)}</p>;\n};\n\nconst deleteImageDataFromDBRecords = () => {\n  // delete by timestamp based on prediction\n  const imgCollection = \"imageData\";\n};\n\nconst createVideoFromDBRecords = () => {\n  // pull in data from DB and construct video\n  const imgCollection = \"imageData\";\n  const predCollection = \"\";\n};\n\nconst getPredictionsFromDB = () => {\n  // predictions should return together with the references UID from imageData\n  // as well as timestamp\n  const collectionName = \"predictions\";\n};\n","import Record from \"./VideoRecorder\";\n\nexport default Record;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { logging } from \"../Database\";\n\nconst VideoRecorder = ({\n  videoRef,\n  triggerRecording,\n  duration,\n  onComplete,\n  showPreview\n}) => {\n  const OPTIONS = {\n    tag: \"video\",\n    type: \"video/webm\",\n    ext: \".mp4\",\n    gUM: { video: true, audio: true }\n  };\n  const [videoOut, setVideoOut] = useState(\"\");\n\n  const [recordDuration, setRecordDuration] = useState(5000);\n  useEffect(() => {\n    if (duration && typeof duration === \"number\") setRecordDuration(duration);\n  }, [duration]);\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoRecordings, setVideoRecordings] = useState([]);\n  const [videoChunk, setVideoChunk] = useState([]);\n  const ulRef = useRef();\n  useEffect(() => {\n    if (triggerRecording === true && isRecording === false) {\n      logging(\"VideoRecorder: START starting one recording\");\n      record({ duration: recordDuration });\n    }\n  }, [triggerRecording, isRecording]);\n\n  useEffect(() => {\n    // if there is a recording\n    if (videoChunk.length > 0) {\n      console.log(\"making link!\", videoChunk);\n      showPreview && makeLink();\n    }\n  }, [videoChunk]);\n\n  const makeLink = () => {\n    let blob = new Blob(videoChunk, { type: OPTIONS.type });\n\n    let url = URL.createObjectURL(blob);\n\n    const out = (\n      <li key={url}>\n        <video height={200} controls src={url} />\n        <br />\n        <a href={url} download={`video${OPTIONS.ext}`}>{`download ${`video${\n          OPTIONS.ext\n        }`}`}</a>\n      </li>\n    );\n    setVideoOut([...videoOut, out]);\n  };\n\n  const record = ({ duration = 2000 }) => {\n    if (videoRef) {\n      const stream = videoRef.current.stream;\n      if (!stream.active) {\n        console.log(\"media stream is not active.\", stream);\n      }\n\n      // setup recorder\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = e => {\n        // when the recording is complete and there is data\n        setVideoChunk([e.data]);\n        if (onComplete) onComplete(e.data);\n      };\n      recorder.onstart = e => {\n        setVideoChunk([]);\n        setTimeout(() => {\n          recorder.stop();\n        }, recordDuration);\n      };\n\n      // run recorder\n      recorder.start();\n    }\n  };\n\n  return (\n    <ul\n      style={{\n        display: \"flex\",\n        listStyleType: \"none\",\n        width: \"100%\",\n        overflowX: \"scroll\"\n      }}\n    >\n      {videoOut}\n    </ul>\n  );\n};\n\nexport default VideoRecorder;\n","import * as tf from \"@tensorflow/tfjs\";\n\nconst WIDTH = 12;\nconst HEIGHT = 9;\nconst ARR_LENGTH = 432;\n\nconst loadModel = async () => {\n  return await tf.loadLayersModel(\"assets/model/brightness-predictor.json\");\n};\n\nconst predictBrightness = async rgbarray => {\n  const model = await loadModel();\n\n  if (model) {\n    return await tf.tidy(() => {\n      const xs = [Array.from(rgbarray)];\n      const inputXS = tf.tensor2d(xs, [xs.length, ARR_LENGTH]);\n\n      console.log(inputXS);\n\n      const preds = model.predict(inputXS);\n\n      preds.print();\n\n      const out = preds.arraySync()[0][0];\n\n      return out;\n    });\n  }\n};\n\n// sml model learning bright and dark\nexport const isBright = async canvas => {\n  const clrs = canvas\n    .getContext(\"2d\")\n    .getImageData(0, 0, canvas.width, canvas.height);\n\n  console.log(clrs);\n\n  const flat = clrs.data;\n  const res = await predictBrightness(flat);\n  console.log(res);\n  return res > 0.6 ? true : false;\n};\n\nexport default isBright;\n","import BrightnessDetector from \"./BrightnessDetector\";\n\nexport default BrightnessDetector;\n","import { useState, useEffect } from \"react\";\nimport useInterval from \"../customHooks/useInterval\";\n\nimport { isBright } from \"./helpers\";\n\nconst BrightnessDetector = ({ videoRef, isDetecting, delay, onDetect }) => {\n  // local ML brightness detection\n  const [detectionDelay, setDetectionDelay] = useState(500);\n  useEffect(() => {\n    if (delay && typeof delay === \"number\") setDetectionDelay(delay);\n  }, [delay]);\n\n  useInterval(\n    () => {\n      detect();\n    },\n    isDetecting ? detectionDelay : null\n  );\n  const detect = async () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 12;\n      canvas.height = 9;\n      // TODO: check if canvas is drawing entire image, or is it cut off\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // check brightness\n      const bright = await isBright(canvas);\n      if (onDetect) {\n        onDetect({ bright: bright });\n      }\n    }\n  };\n  return null;\n};\n\nexport default BrightnessDetector;\n","// https://ml5js.org/docs/image-classification-example\n// https://codelabs.developers.google.com/?cat=TensorFlow\n// https://console.firebase.google.com/u/3/project/operation-verde-ricecam/database\n\nimport React, { useState, useEffect } from \"react\";\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\n\nimport useInterval from \"../customHooks/useInterval\";\nimport Camera from \"../Camera\";\nimport VideoRecorder from \"../MediaRecorder\";\nimport BrightnessDetector from \"../BrightnessPredictor\";\nimport {\n  pushImageDataToStorage,\n  pushVideoDataToStorage,\n  reportAppStatetoDB,\n  listenToDBAppState,\n  grabListOfVideoPaths,\n  logging,\n  activityMonitor\n} from \"../Database\";\n\nimport { download, convertToArray, convertToObject } from \"../atoms\";\n\ndayjs.locale(\"ja\");\nconst SCALE = 1;\nconst RGB_SCALE = 0.02;\nconst DETECT_SCALE = 0.02;\nconst STREAM_SCALE = 1;\nconst MONITOR_SCALE = 0.1;\n\nconst PhotoRecorder = ({ videoRef, captureDelay, isCapturing, onRecord }) => {\n  useInterval(\n    () => {\n      capture();\n    },\n    isCapturing ? captureDelay : null\n  );\n\n  const [data, setData] = useState([]);\n  const [rgb, setRGB] = useState([]);\n  const capture = () => {\n    let out = {\n      b64: \"\",\n      rgbArray: []\n    };\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * SCALE;\n      canvas.height = video.videoHeight * SCALE;\n      // canvas.width = 12;\n      // canvas.height = 9;\n\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n      out.b64 = [...data, b64];\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      canvas.width = video.videoWidth * RGB_SCALE;\n      canvas.height = video.videoHeight * RGB_SCALE;\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // rgb array (flat)\n      const clrs = context.getImageData(0, 0, canvas.width, canvas.height);\n      console.log(clrs);\n      const flat = convertToArray(clrs.data);\n\n      setRGB([...rgb, flat]);\n      out.rgbArray = [...rgb, flat];\n      // download(JSON.stringify({ data: flat }), \"temp.json\", \"application/json\");\n\n      onRecord && onRecord(out);\n\n      return data;\n    }\n  };\n\n  return <p>capturing: {isCapturing}</p>;\n};\n\nconst PhotoStream = ({ videoRef, streamDelay, isStreaming }) => {\n  useInterval(\n    () => {\n      stream();\n    },\n    isStreaming ? streamDelay : null\n  );\n  const stream = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * STREAM_SCALE;\n      canvas.height = video.videoHeight * STREAM_SCALE;\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // preview\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      // setData([...data, b64]);\n\n      // blob it to send to db\n      // blobbing takes a long time therefore there is a callback\n      canvas.toBlob(b => {\n        console.log(b);\n        pushImageDataToStorage(b);\n      });\n    }\n  };\n\n  return <p> DEBUG: photo streaming: {`${isStreaming}`}</p>;\n};\n\nconst isWithinTimeRange = (start, end) => {\n  console.log(start, end);\n  if (!start || !end) return false;\n  const timestamp = dayjs();\n  const sH = start.slice(0, 2);\n  const sM = start.slice(2);\n  const startTimestamp = dayjs()\n    .hour(sH)\n    .minute(sM);\n\n  const eH = end.slice(0, 2);\n  const eM = end.slice(2);\n  const endTimestamp = dayjs()\n    .hour(eH)\n    .minute(eM);\n\n  const chk1 = timestamp.isAfter(startTimestamp);\n  const chk2 = timestamp.isBefore(endTimestamp);\n  const res = chk1 && chk2;\n\n  return res;\n};\n\nconst Timer = ({ start, end, onDetect }) => {\n  if (!start || !end) return \"null timer\";\n  const timestamp = dayjs();\n  const sH = start.slice(0, 2);\n  const sM = start.slice(2);\n  const startTimestamp = dayjs()\n    .hour(sH)\n    .minute(sM);\n\n  const eH = end.slice(0, 2);\n  const eM = end.slice(2);\n  const endTimestamp = dayjs()\n    .hour(eH)\n    .minute(eM);\n\n  const chk1 = timestamp.isAfter(startTimestamp);\n  const chk2 = timestamp.isBefore(endTimestamp);\n  const res = chk1 && chk2;\n\n  res && onDetect && onDetect(res);\n\n  return (\n    <div>\n      <h3>timer: </h3>\n      <p>now: {timestamp.format(\"HH:mm\")}</p>\n      <p>start: {startTimestamp.format(\"HH:mm\")}</p>\n      <p>end: {endTimestamp.format(\"HH:mm\")}</p>\n      <p>recording allowed? : {`${res}`}</p>\n    </div>\n  );\n};\n\nconst VideoList = ({ toggleRefresh }) => {\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n  const hydrateList = () =>\n    grabListOfVideoPaths().then(v => {\n      setVlist(v);\n    });\n\n  useEffect(() => {\n    hydrateList();\n  }, [toggleRefresh]);\n\n  const names = vlist.map(v =>\n    decodeURIComponent(v.split(\"/videos%2F\")[1].split(\"?alt\")[0])\n  );\n\n  return (\n    <>\n      <h3>current list of videos today ({vlist.length}): </h3>\n      <ol\n        style={{\n          whiteSpace: \"nowrap\",\n          fontSize: \"0.5rem\",\n          height: 300,\n          overflow: \"scroll\"\n        }}\n      >\n        {vlist.map((v, i) => {\n          return (\n            <li key={i} style={{ margin: \"5px 0\", textAlign: \"left\" }}>\n              <a href={v}>{names[i]}</a>\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n};\n\nconst CameraComponent = ({ showPreviews = false }) => {\n  const [videoRef, setVideoRef] = useState();\n  const [logs, setLogs] = useState([]);\n  const [isDay, setIsDay] = useState(true);\n  // log messages\n  const handleLog = message => {\n    setLogs(prev => [...prev.slice(-4), message]);\n    console.log(\"LOGGER message: \", message);\n    logging(message, v => console.log(\"LOGGER: completed. \", v));\n  };\n  // log browser status\n  const ACTIVITY_MONITOR_INTERVAL = 60000;\n  useInterval(() => {\n    console.log(\"logging browser performance\");\n    activityMonitor();\n  }, ACTIVITY_MONITOR_INTERVAL);\n\n  // local ML brightness detector\n  const [isDetecting, setIsDetecting] = useState(false);\n  const DELAY = 1000;\n\n  // video recorder\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoDuration, setVideoDuration] = useState(5000);\n  const [timer, setTimer] = useState({ start: null, end: null });\n  const [isRecordingContinuously, setIsRecordingContinuously] = useState(false);\n  const [cameraName, setCameraName] = useState(\"\");\n  const EVERY_N_MINS = 5;\n  const [recordIntervalMin, setRecordIntervalMin] = useState(EVERY_N_MINS);\n  useInterval(\n    () => {\n      const t = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n\n      if (!isRecording && isWithinTimeRange(timer.start, timer.end)) {\n        handleLog(`recording video at ${t}`);\n        console.log(\n          \"within timer?? \",\n          isWithinTimeRange(timer.start, timer.end)\n        );\n        setIsRecording(true);\n      } else {\n        handleLog(\"recording still underway, not setting recording to true\");\n      }\n    },\n    isRecordingContinuously ? recordIntervalMin * 60000 : null\n  );\n\n  // listen to DB commands (remote)\n  const [dbCommands, setDBCommands] = useState({});\n  useEffect(() => {\n    if (videoRef) {\n      console.log(\"listening to DB!\");\n      listenToDBAppState(setDBCommands);\n    }\n  }, [videoRef]);\n  // set commands according to db\n  const handleSetVideoDuration = amount => {\n    handleLog(\n      `setting recording duration to ${dbCommands.videoDurationSec} secs`\n    );\n    setVideoDuration(amount);\n  };\n  const handleSetVideoRecordFrequency = mins => {\n    handleLog(\n      `setting recording interval to ${dbCommands.videoRecordFreqMin} mins`\n    );\n    setRecordIntervalMin(mins);\n  };\n  const handleSetTimer = time => {\n    handleLog(`setting timers to ${JSON.stringify(time)}`);\n    if (time.start && time.end) {\n      setLocalStateMonitor(p => ({\n        ...p,\n        isTimerSet: true\n      }));\n      setTimer(time);\n    }\n  };\n  const handleRecordOnce = run => {\n    handleLog(`recording video once`);\n    setLocalStateMonitor(p => ({\n      ...p,\n      isRecording: true\n    }));\n    setIsRecording(true);\n  };\n  const handleRecordContinuous = run => {\n    if (run) {\n      handleLog(\n        `setting continuous recording to ${dbCommands.setContinuousRecording}`\n      );\n      setLocalStateMonitor(p => ({\n        ...p,\n        isContinuouslyRecording: true,\n        isRecording: true\n      }));\n      setIsRecording(true);\n      setIsRecordingContinuously(true);\n    } else {\n      handleLog(\n        `setting continuous recording to ${dbCommands.setContinuousRecording}`\n      );\n      setLocalStateMonitor(p => ({\n        ...p,\n        isContinuouslyRecording: false,\n        isRecording: false\n      }));\n      setIsRecording(false);\n      setIsRecordingContinuously(false);\n    }\n  };\n  useEffect(() => {\n    if (dbCommands) {\n      handleLog(`commands received: ${JSON.stringify(dbCommands)}`);\n      if (\n        timer.start !== dbCommands.timerStart ||\n        timer.end !== dbCommands.timerEnd\n      ) {\n        handleSetTimer({\n          start: dbCommands.timerStart,\n          end: dbCommands.timerEnd\n        });\n      }\n      if (isRecordingContinuously !== dbCommands.setContinuousRecording) {\n        handleRecordContinuous(dbCommands.setContinuousRecording);\n      }\n      if (videoDuration !== dbCommands.videoDurationSec) {\n        handleSetVideoDuration(dbCommands.videoDurationSec);\n      }\n      if (recordIntervalMin !== dbCommands.videoRecordFreqMin) {\n        handleSetVideoRecordFrequency(dbCommands.videoRecordFreqMin);\n      }\n    }\n  }, [dbCommands]);\n\n  // push local state to DB\n  const [localStateMonitor, setLocalStateMonitor] = useState({\n    isContinuouslyRecording: null,\n    isRecording: null,\n    isTimerSet: null,\n    nextRecordingTime: null\n  });\n  useEffect(() => {\n    reportAppStatetoDB(localStateMonitor);\n  }, [localStateMonitor]);\n\n  // --------\n  // TESTING\n  // --------\n  // db streaming for images\n  const [streamDelay, setStreamDelay] = useState(100);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const streamToDB = () => {\n    // toggle\n\n    if (!isStreaming) {\n      handleLog(\"streaming images to database!\");\n      // setStreamDelay(100);\n      setIsStreaming(true);\n    } else {\n      handleLog(\"image streaming stopped!\");\n      setIsStreaming(false);\n      // setStreamDelay(1000);\n    }\n  };\n  const handleStreamToDB = run => {\n    if (run) {\n      handleLog(\"DEBUG: streaming images to database!\");\n      // setStreamDelay(100);\n      setIsStreaming(true);\n    } else {\n      handleLog(\"DEBUG: stopping image stream!\");\n      setIsStreaming(false);\n    }\n  };\n  useEffect(() => {\n    if (dbCommands) {\n      if (isStreaming !== dbCommands.debugStreamImages) {\n        handleStreamToDB(dbCommands.debugStreamImages);\n      }\n    }\n  }, [dbCommands]);\n\n  // const handleRecord1Hour = () => {\n  //   const OneHourInMS = 3600000;\n  //   setIsRecording(true);\n  //   setIsRecordingContinuously(true);\n  //   setTimeout(() => {\n  //     setIsRecordingContinuously(false);\n  //   }, OneHourInMS);\n  // };\n\n  const handleToggleDetect = () => {\n    setIsDetecting(!isDetecting);\n  };\n\n  const [refreshVideo, toggleRefreshVideo] = useState(false);\n  const handleVideoComplete = vidBlob => {\n    console.log(cameraName, vidBlob);\n    pushVideoDataToStorage(vidBlob, cameraName, () =>\n      toggleRefreshVideo(p => !p)\n    );\n    setLocalStateMonitor(p => ({ ...p, isRecording: false }));\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    if (videoRef) {\n      const video = videoRef.current.video;\n      video.height = video.videoHeight * MONITOR_SCALE;\n      video.width = video.videoWidth * MONITOR_SCALE;\n      console.log(videoRef.current.video);\n    }\n  }, [videoRef]);\n\n  const [isShowingDebug, toggleIsShowingDebug] = useState(false);\n\n  const videoLengthSec = dbCommands.videoDurationSec / 1000;\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDay ? \"white\" : \"#282c34\",\n        width: \"100%\",\n        overflowX: \"hidden\"\n      }}\n    >\n      <Camera onRef={setVideoRef} />\n\n      <br />\n\n      {!cameraName ? (\n        <h3>please select a camera</h3>\n      ) : (\n        <div style={{ textAlign: \"left\", padding: \"0 10px\" }}>\n          <small>\n            select <strong style={{ color: \"gray\" }}>'record 1 video'</strong>{\" \"}\n            to test that the camera is recording properly. If it does, your new\n            video should show up on the 'current list of videos today' section.\n            <br />\n            <br />\n            When you are ready, press the <strong>\n              'record indefinitely'\n            </strong>{\" \"}\n            button.\n          </small>\n        </div>\n      )}\n\n      <br />\n      {isRecording && <h3 style={{ color: \"red\" }}>recording...</h3>}\n\n      <code>recording options: </code>\n      <br />\n      <button\n        style={{\n          color: isRecording && \"red\",\n          padding: \"5px 10px\",\n          fontWeight: \"bold\"\n        }}\n        onClick={handleRecordOnce}\n        disabled={!cameraName}\n      >\n        record 1 video {!!videoLengthSec && `(${videoLengthSec} sec)`}\n      </button>\n      {/* <button onClick={handleRecord1Hour}>\n        record 5 sec videos for 1 hour\n      </button> */}\n      <button\n        onClick={handleRecordContinuous}\n        style={{\n          color: isRecordingContinuously && \"red\",\n          padding: \"5px 10px\",\n          fontWeight: \"bold\"\n        }}\n        disabled={!cameraName}\n      >\n        record indefinitely\n      </button>\n      <select\n        onChange={e => {\n          console.log(e.target.value + \" selected\");\n          setCameraName(e.target.value);\n        }}\n        style={{\n          padding: \"5px 10px\",\n          fontWeight: \"bold\",\n          color: cameraName ? \"black\" : \"red\"\n        }}\n      >\n        <option style={{ color: \"red\" }} value=\"\">\n          PLEASE SELECT CAMERA\n        </option>\n        <option value=\"CAM 01\">CAM 01</option>\n        <option value=\"CAM 02\">CAM 02</option>\n      </select>\n      <br />\n      <VideoList toggleRefresh={refreshVideo} />\n\n      <br />\n\n      <button\n        onClick={() => toggleIsShowingDebug(p => !p)}\n        style={{ padding: \"5px 10px\", marginBottom: 30 }}\n      >\n        Toggle Show Debug\n      </button>\n\n      {isShowingDebug ? (\n        <div>\n          <code>debug buttons: </code>\n          <br />\n          {/* <button onClick={captureOne}>capture</button>\n          <button onClick={capture5sec}>capture5sec</button>\n          <button onClick={capture5secvideo}>capture5sec video</button>\n          <button onClick={downloadAsJson}>download data as json</button>\n          <button onClick={sendToDB}>push to database</button> */}\n          <button\n            style={{ color: isStreaming ? \"red\" : \"orange\" }}\n            onClick={streamToDB}\n          >\n            DEBUG: toggle stream to database\n          </button>\n          <button onClick={handleToggleDetect}>\n            toggle brightness detection\n          </button>\n          <br />\n          <br />\n          <code>debug logging: </code>\n          <br />\n          <ul>\n            {logs.map((v, i) => (\n              <li key={i}>{v}</li>\n            ))}\n          </ul>\n\n          <br />\n          {/* {showPreviews && <Gallery data={data} />} */}\n          <PhotoStream\n            videoRef={videoRef}\n            showPreview={showPreviews}\n            streamDelay={streamDelay}\n            isStreaming={isStreaming}\n          />\n          <br />\n          <h3>local state:</h3>\n          {JSON.stringify(localStateMonitor, null, 2)}\n\n          <h3>db state</h3>\n          {JSON.stringify(dbCommands, null, 2)}\n        </div>\n      ) : null}\n\n      <VideoRecorder\n        videoRef={videoRef}\n        triggerRecording={isRecording}\n        duration={videoDuration}\n        showPreview={showPreviews}\n        onComplete={handleVideoComplete}\n      />\n\n      {/* possible usage: user (twitter) controlled photo session\n      <PhotoRecorder\n        videoRef={videoRef}\n        showPreview={showPreviews}\n        captureDelay={captureDelay}\n        isCapturing={isCapturing}\n      /> */}\n      <BrightnessDetector\n        videoRef={videoRef}\n        isDetecting={isDetecting}\n        delay={DELAY}\n        onDetect={v => setIsDay(v.bright)}\n      />\n    </div>\n  );\n};\n\nexport default CameraComponent;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport RiceCam from \"./components/RiceCam\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <p>v1.5</p>\n        <br />\n        <RiceCam />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}