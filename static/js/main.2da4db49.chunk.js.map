{"version":3,"sources":["components/Camera/Show.module.css","logo.svg","components/customHooks/useInterval.js","components/Camera/Camera.js","components/Camera/index.js","components/Camera/Show.js","components/Database/lib/firebase.js","components/Database/index.js","components/MediaRecorder/index.js","components/MediaRecorder/VideoRecorder.js","components/BrightnessPredictor/index.js","components/RiceCam/index.js","components/atoms/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gallery","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","SETTINGS","width","height","facingMode","WebcamComponent","_ref","onRef","webcamRef","_useState","useState","_useState2","Object","slicedToArray","cameraReady","setCameraReady","setupCamera","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e1","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","_this","setState","error_messages","video","onloadedmetadata","stop","apply","this","arguments","react_default","createElement","react_webcam_default","audio","ref","screenshotFormat","videoConstraints","Camera","Gallery","data","className","styles","map","v","i","key","src","alt","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","keys","concat","firebase","apps","length","initializeApp","dayjs","locale","logging","message","timestamp","format","daystamp","firestore","collection","doc","set","merge","then","catch","e","console","log","activityMonitor","convertToObject","browserStorage","estimate","mem","ram","connection","connectionSpeed","battery","batteryLevel","performance","output","input","showFunction","obj","storage","sent","usage","quota","percent","toFixed","window","memory","deviceMemory","mozConnection","webkitConnection","msConnection","effectiveType","getBattery","level","network","browserMemory","objectSpread","totalJSHeapSize","jsHeapSizeLimit","comment","status","_x","pushImageDataToStorage","imgBlob","put","res","location","path","url","err","grabListOfVideoPaths","_ref3","_callee4","day","_context4","get","_ref4","_callee3","querySnapshot","_context3","forEach","_ref5","_callee2","_context2","getDownloadURL","push","abrupt","_x4","_x3","_x2","Record","videoRef","triggerRecording","duration","onComplete","previewVideo","OPTIONS","videoOut","setVideoOut","_useState3","_useState4","recordDuration","setRecordDuration","_useState5","_useState6","isRecording","_useState7","_useState8","_useState9","_useState10","videoChunk","setVideoChunk","record","makeLink","blob","Blob","type","URL","createObjectURL","out","controls","href","download","toConsumableArray","stream","active","recorder","MediaRecorder","ondataavailable","onstart","setTimeout","start","style","display","listStyleType","overflowX","loadModel","tf","predictBrightness","rgbarray","model","xs","Array","from","inputXS","preds","predict","print","arraySync","isBright","canvas","clrs","flat","getContext","getImageData","BrightnessDetector","isDetecting","onDetect","detectionDelay","setDetectionDelay","detect","bright","document","drawImage","VideoList","vlist","setVlist","Fragment","whiteSpace","fontSize","overflow","margin","CameraComponent","_ref4$showPreviews","showPreviews","setVideoRef","logs","setLogs","_useState11","_useState12","isDay","setIsDay","handleLog","slice","_useState13","_useState14","setIsDetecting","_useState15","_useState16","setIsRecording","_useState17","_useState18","isRecordingContinuously","setIsRecordingContinuously","t","EVERY_N_MINS","_useState19","_useState20","captureDelay","_useState21","_useState22","isCapturing","capture","_useState23","_useState24","setData","_useState25","_useState26","rgb","setRGB","context","videoWidth","videoHeight","b64","toDataURL","clearRect","domOBJ","arr","convertToArray","_useState27","_useState28","streamDelay","setStreamDelay","_useState29","_useState30","isStreaming","setIsStreaming","toBlob","b","backgroundColor","components_Camera","onClick","l","color","Camera_Gallery","components_MediaRecorder","vidBlob","pushVideoDataToStorage","RiceCam_VideoList","RiceCam_BrightnessDetector","App","RiceCam","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2da4db49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Show_gallery__34GpT\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst SETTINGS = {\n  width: 800,\n  height: 800,\n  facingMode: \"environment\"\n};\n\nconst WebcamComponent = ({ onRef }) => {\n  const webcamRef = useRef();\n  const [cameraReady, setCameraReady] = useState(false);\n  const setupCamera = async () => {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const video = webcamRef.current.video;\n    video.onloadedmetadata = () => {\n      setCameraReady(true);\n    };\n  };\n\n  useEffect(() => {\n    setupCamera();\n  }, [webcamRef]);\n\n  if (cameraReady) {\n    onRef && onRef(webcamRef);\n  }\n\n  return (\n    <Webcam\n      audio={false}\n      ref={webcamRef}\n      screenshotFormat=\"image/jpeg\"\n      videoConstraints={SETTINGS}\n      height={400}\n      width={400}\n    />\n  );\n};\n\nexport default WebcamComponent;\n","import Camera from \"./Camera\";\nimport Show from \"./Show\";\n\nexport default Camera;\nexport const Gallery = Show;\n","import React from \"react\";\n\nimport styles from \"./Show.module.css\";\n\nconst Gallery = ({ data }) => {\n  // receives b64 streams and\n\n  return (\n    <div className={styles.gallery}>\n      {data &&\n        data.map((v, i) => {\n          return <img key={i} src={v} alt=\"img\" />;\n        })}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nconst PushToFirebase = (databaseRef = \"test\", data, callback) => {\n  firebase\n    .database()\n    .ref(databaseRef)\n    .push(data)\n    .then(v => callback(v));\n};\n\nconst PushToFirestore = (databaseRef = \"test\", data, callback) => {\n  const db = firebase.firestore();\n  db.collection(databaseRef);\n};\n\nconst sortTimestampArray = (data, latest = false) => {\n  if (latest) return data.sort((prev, next) => dayjs(next) - dayjs(prev));\n  // latest first\n  else return data.sort((prev, next) => dayjs(prev) - dayjs(next)); // earliest first\n};\n\nexport const logging = (message, callback) => {\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"logs\")\n    .doc(timestamp)\n    .set({ message: message }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const activityMonitor = async callback => {\n  function convertToObject(input, showFunction) {\n    // recursively\n    // https://stackoverflow.com/questions/37733272/convert-dom-object-to-javascript-object\n    let obj = {};\n    for (var p in input) {\n      switch (typeof input[p]) {\n        case \"function\":\n          if (showFunction) obj[p] = `function: ${input[p]}`;\n          break;\n        case \"object\":\n          obj[p] = convertToObject(input[p], showFunction);\n          break;\n        case \"number\":\n          obj[p] = input[p];\n          break;\n        default:\n          obj[p] = input[p];\n      }\n    }\n    return obj;\n  }\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  // browser tab storage\n  let browserStorage;\n  if (\"storage\" in navigator && \"estimate\" in navigator.storage) {\n    const estimate = await navigator.storage.estimate();\n    browserStorage = {\n      usage: estimate.usage,\n      quota: estimate.quota,\n      percent: `${((estimate.usage * 100) / estimate.quota).toFixed(0)} used`\n    };\n  } else {\n    browserStorage = \"browser does not have storage API\";\n  }\n  // js heap size\n  //   This API returns three pieces of data:\n  // jsHeapSizeLimit - The amount of memory (in bytes) that the JavaScript heap is limited to.\n  // totalJSHeapSize - The amount of memory (in bytes) that the JavaScript heap has allocated including free space.\n  // usedJSHeapSize - The amount of memory (in bytes) currently being used.\n  const mem = window.performance.memory || {};\n  // RAM\n  const ram =\n    `${navigator.deviceMemory} GB` ||\n    \"browser does not have deviceMemory API (ram)\";\n  // network speed\n  const connection =\n    navigator.connection ||\n    navigator.mozConnection ||\n    navigator.webkitConnection ||\n    navigator.msConnection;\n  const connectionSpeed = connection\n    ? connection.effectiveType\n    : \"browser does not have connection API\";\n  // battery\n  let battery;\n  if (\"getBattery\" in navigator) {\n    battery = await navigator.getBattery();\n  }\n  const batteryLevel = battery\n    ? battery.level\n    : \"browser does not have battery API\";\n  // general performance\n  // .toJSON() is unreliable, returns custom objects\n  const performance = convertToObject(window.performance, false);\n\n  const output = {\n    storage: browserStorage,\n    ram: ram,\n    network: connectionSpeed,\n    battery: batteryLevel,\n    performance: performance,\n    browserMemory: {\n      ...convertToObject(mem, false),\n      usage: `${(mem.totalJSHeapSize / mem.jsHeapSizeLimit) * 100} percent`,\n      comment:\n        \"units in bytes. percent is percent of allocated browser memory (multiple tabs included)\"\n    }\n  };\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"browser performance logs\")\n    .doc(timestamp)\n    .set({ status: output }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const pushImageDataToStorage = imgBlob => {\n  const imgFolder = \"images\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${imgFolder}/${timestamp}.png`)\n    .put(imgBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      firebase\n        .firestore()\n        .collection(\"imageURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path });\n    })\n    .catch(e => {\n      const err = `pushImageDataToStorage: ERROR ${e}`;\n      logging(err, () => console.log(err));\n    });\n};\n\nexport const pushVideoDataToStorage = vidBlob => {\n  const vidFolder = \"videos\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${vidFolder}/${timestamp}.mp4`)\n    .put(vidBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      const dbRef = firebase\n        .firestore()\n        .collection(\"videoURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path })\n        .then(v => {\n          const l = `pushVideoDataToStorage: COMPLETE video:${vidFolder}/${timestamp}.mp4, ref: ${path}, callback: ${v}`;\n          logging(l, () => console.log(l));\n        });\n    })\n    .catch(e => {\n      const err = `pushVideoDataToStorage: ERROR ${e}`;\n      logging(err, () => console.log(err));\n    });\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .get()\n    .then(async querySnapshot => {\n      let output = [];\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        // console.log(url);\n\n        return await firebase\n          .storage()\n          .ref(url)\n          .getDownloadURL()\n          .then(src => {\n            // and here are your downloadable urls\n            // console.log(\"downloadable url: \", src);\n            output.push(src);\n          });\n      });\n\n      //console.log(\"returning output! \", output);\n      return output;\n    });\n};\n\nconst deleteImageDataFromDBRecords = () => {\n  // delete by timestamp based on prediction\n  const imgCollection = \"imageData\";\n};\n\nconst createVideoFromDBRecords = () => {\n  // pull in data from DB and construct video\n  const imgCollection = \"imageData\";\n  const predCollection = \"\";\n};\n\nconst getPredictionsFromDB = () => {\n  // predictions should return together with the references UID from imageData\n  // as well as timestamp\n  const collectionName = \"predictions\";\n};\n","import Record from \"./VideoRecorder\";\n\nexport default Record;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { logging } from \"../Database\";\n\nconst VideoRecorder = ({\n  videoRef,\n  triggerRecording,\n  duration,\n  onComplete,\n  previewVideo\n}) => {\n  const OPTIONS = {\n    tag: \"video\",\n    type: \"video/webm\",\n    ext: \".mp4\",\n    gUM: { video: true, audio: true }\n  };\n  const [videoOut, setVideoOut] = useState(\"\");\n\n  const [recordDuration, setRecordDuration] = useState(5000);\n  useEffect(() => {\n    if (duration && typeof duration === \"number\") setRecordDuration(duration);\n  }, [duration]);\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoRecordings, setVideoRecordings] = useState([]);\n  const [videoChunk, setVideoChunk] = useState([]);\n  const ulRef = useRef();\n  useEffect(() => {\n    if (triggerRecording === true && isRecording === false) {\n      logging(\"VideoRecorder: START starting one recording\");\n      record({ duration: recordDuration });\n    }\n  }, [triggerRecording, isRecording]);\n\n  useEffect(() => {\n    // if there is a recording\n    if (videoChunk.length > 0) {\n      console.log(\"making link!\", videoChunk);\n      previewVideo && makeLink();\n    }\n  }, [videoChunk]);\n\n  const makeLink = () => {\n    let blob = new Blob(videoChunk, { type: OPTIONS.type });\n\n    let url = URL.createObjectURL(blob);\n\n    const out = (\n      <li key={url}>\n        <video height={200} controls src={url} />\n        <br />\n        <a href={url} download={`video${OPTIONS.ext}`}>{`download ${`video${\n          OPTIONS.ext\n        }`}`}</a>\n      </li>\n    );\n    setVideoOut([...videoOut, out]);\n  };\n\n  const record = ({ duration = 2000 }) => {\n    if (videoRef) {\n      const stream = videoRef.current.stream;\n      if (!stream.active) {\n        console.log(\"media stream is not active.\", stream);\n      }\n\n      // setup recorder\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = e => {\n        // when the recording is complete and there is data\n        setVideoChunk([e.data]);\n        if (onComplete) onComplete(e.data);\n      };\n      recorder.onstart = e => {\n        setVideoChunk([]);\n        setTimeout(() => {\n          recorder.stop();\n        }, recordDuration);\n      };\n\n      // run recorder\n      recorder.start();\n    }\n  };\n\n  return (\n    <ul\n      style={{\n        display: \"flex\",\n        listStyleType: \"none\",\n        width: \"100%\",\n        overflowX: \"scroll\"\n      }}\n    >\n      {videoOut}\n    </ul>\n  );\n};\n\nexport default VideoRecorder;\n","import * as tf from \"@tensorflow/tfjs\";\n\nconst WIDTH = 12;\nconst HEIGHT = 9;\nconst ARR_LENGTH = 432;\n\nconst loadModel = async () => {\n  return await tf.loadLayersModel(\"assets/model/brightness-predictor.json\");\n};\n\nconst predictBrightness = async rgbarray => {\n  const model = await loadModel();\n\n  if (model) {\n    return await tf.tidy(() => {\n      const xs = [Array.from(rgbarray)];\n      const inputXS = tf.tensor2d(xs, [xs.length, ARR_LENGTH]);\n\n      console.log(inputXS);\n\n      const preds = model.predict(inputXS);\n\n      preds.print();\n\n      const out = preds.arraySync()[0][0];\n\n      return out;\n    });\n  }\n};\n\n// sml model learning bright and dark\nexport const isBright = async canvas => {\n  const clrs = canvas\n    .getContext(\"2d\")\n    .getImageData(0, 0, canvas.width, canvas.height);\n\n  console.log(clrs);\n\n  const flat = clrs.data;\n  const res = await predictBrightness(flat);\n  console.log(res);\n  return res > 0.6 ? true : false;\n};\n\nexport default isBright;\n","// https://ml5js.org/docs/image-classification-example\n// https://codelabs.developers.google.com/?cat=TensorFlow\n// https://console.firebase.google.com/u/3/project/operation-verde-ricecam/database\n\nimport React, { useState, useEffect, useRef } from \"react\";\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\n\nimport useInterval from \"../customHooks/useInterval\";\nimport Camera, { Gallery } from \"../Camera\";\nimport VideoRecorder from \"../MediaRecorder\";\nimport {\n  pushImageDataToStorage,\n  pushVideoDataToStorage,\n  grabListOfVideoPaths,\n  logging,\n  activityMonitor\n} from \"../Database\";\n\nimport { download, convertToArray, convertToObject } from \"../atoms\";\nimport { isBright } from \"../BrightnessPredictor\";\n\ndayjs.locale(\"ja\");\nconst SCALE = 1;\nconst RGB_SCALE = 0.02;\nconst DETECT_SCALE = 0.02;\nconst STREAM_SCALE = 1;\nconst MONITOR_SCALE = 0.1;\n\nconst BrightnessDetector = ({ videoRef, isDetecting, delay, onDetect }) => {\n  // local ML brightness detection\n  const [detectionDelay, setDetectionDelay] = useState(500);\n  useEffect(() => {\n    if (delay && typeof delay === \"number\") setDetectionDelay(delay);\n  }, [delay]);\n\n  useInterval(\n    () => {\n      detect();\n    },\n    isDetecting ? detectionDelay : null\n  );\n  const detect = async () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 12;\n      canvas.height = 9;\n      // TODO: check if canvas is drawing entire image, or is it cut off\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // check brightness\n      const bright = await isBright(canvas);\n      if (onDetect) {\n        onDetect({ bright: bright });\n      }\n    }\n  };\n  return null;\n};\n\nconst PhotoRecorder = () => {};\n\nconst Timer = ({ start, end, onDetect }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const startTimestamp = dayjs(start);\n  const endTimestamp = dayjs(end);\n\n  console.log(timestamp, startTimestamp, endTimestamp);\n};\n\nconst VideoList = () => {\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n\n  useEffect(() => {\n    grabListOfVideoPaths().then(v => {\n      console.log(\"paths\");\n      console.log(v);\n      setVlist(v);\n    });\n  }, []);\n\n  return (\n    <>\n      <h3>current list of videos today ({vlist.length}): </h3>\n      <ul\n        style={{\n          whiteSpace: \"nowrap\",\n          fontSize: \"0.5rem\",\n          listStyleType: \"none\",\n          height: 300,\n          overflow: \"scroll\"\n        }}\n      >\n        {vlist.map((v, i) => {\n          return (\n            <li key={i} style={{ margin: \"5px 0\" }}>\n              <a href={v}>{v}</a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst CameraComponent = ({ showPreviews = false }) => {\n  const [videoRef, setVideoRef] = useState();\n  const [logs, setLogs] = useState([]);\n  const [isDay, setIsDay] = useState(true);\n  // log messages\n  const handleLog = message => {\n    setLogs([...logs.slice(-4), message]);\n    logging(message, v => console.log(\"LOGGER: completed. \", v));\n  };\n  // log browser status\n  const ACTIVITY_MONITOR_INTERVAL = 60000;\n  useInterval(() => {\n    console.log(\"logging browser performance\");\n    activityMonitor();\n  }, ACTIVITY_MONITOR_INTERVAL);\n\n  // local ML brightness detector\n  const [isDetecting, setIsDetecting] = useState(false);\n  const DELAY = 1000;\n  // video recorder\n  const [isRecording, setIsRecording] = useState(false);\n  const DURATION = 5000;\n\n  // timer for multiple video records\n  const [isRecordingContinuously, setIsRecordingContinuously] = useState(false);\n  const EVERY_N_MINS = 5;\n  const RECORDING_INTERVALS = EVERY_N_MINS * 60000;\n  useInterval(\n    () => {\n      const t = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n\n      if (!isRecording) {\n        handleLog(`recording video at ${t}`);\n        setIsRecording(true);\n      } else {\n        handleLog(\"recording still underway, not setting recording to true\");\n      }\n    },\n    isRecordingContinuously ? RECORDING_INTERVALS : null\n  );\n\n  // local capture\n  const [captureDelay, setCaptureDelay] = useState(1000);\n  const [isCapturing, setIsCapturing] = useState(false);\n  useInterval(\n    () => {\n      capture();\n    },\n    isCapturing ? captureDelay : null\n  );\n\n  const [data, setData] = useState([]);\n  const [rgb, setRGB] = useState([]);\n  const capture = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * SCALE;\n      canvas.height = video.videoHeight * SCALE;\n      // canvas.width = 12;\n      // canvas.height = 9;\n\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      canvas.width = video.videoWidth * RGB_SCALE;\n      canvas.height = video.videoHeight * RGB_SCALE;\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // rgb array (flat)\n      const clrs = context.getImageData(0, 0, canvas.width, canvas.height);\n      console.log(clrs);\n      const flat = convertToArray(clrs.data);\n\n      setRGB([...rgb, flat]);\n      // download(JSON.stringify({ data: flat }), \"temp.json\", \"application/json\");\n\n      return data;\n    }\n  };\n\n  // db streaming for images\n  const [streamDelay, setStreamDelay] = useState(100);\n  const [isStreaming, setIsStreaming] = useState(false);\n  useInterval(\n    () => {\n      stream();\n    },\n    isStreaming ? streamDelay : null\n  );\n  const stream = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * STREAM_SCALE;\n      canvas.height = video.videoHeight * STREAM_SCALE;\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // preview\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n\n      // blob it to send to db\n      // blobbing takes a long time therefore there is a callback\n      canvas.toBlob(b => {\n        console.log(b);\n        pushImageDataToStorage(b);\n      });\n    }\n  };\n\n  // --------\n  // TESTING\n  // --------\n\n  const captureOne = () => {\n    setIsCapturing(true);\n    setTimeout(() => {\n      setIsCapturing(false);\n    }, 1100);\n  };\n\n  const capture5sec = () => {\n    setIsCapturing(true);\n    setTimeout(() => {\n      setIsCapturing(false);\n    }, 5000);\n  };\n\n  const capture5secvideo = () => {\n    setCaptureDelay(1);\n    setIsCapturing(true);\n    setTimeout(() => {\n      setIsCapturing(false);\n      setCaptureDelay(1000);\n    }, 5000);\n  };\n\n  const downloadAsJson = () => {\n    download(JSON.stringify({ data: rgb }), \"temp.json\", \"application/json\");\n    setData([]);\n    setRGB([]);\n  };\n\n  const sendToDB = () => {\n    // push to firebase\n    pushImageDataToStorage();\n  };\n\n  const streamToDB = () => {\n    // toggle\n    handleLog(\"streaming images to database!\");\n    if (!isStreaming) {\n      console.log(\"capturing!\");\n      setStreamDelay(1);\n      setIsStreaming(true);\n    } else {\n      console.log(\"stopping!\");\n      setIsStreaming(false);\n      setStreamDelay(1000);\n    }\n  };\n\n  const handleRecord1Hour = () => {\n    const OneHourInMS = 3600000;\n    setIsRecording(true);\n    setIsRecordingContinuously(true);\n    setTimeout(() => {\n      setIsRecordingContinuously(false);\n    }, OneHourInMS);\n  };\n\n  const handleRecordContinuous = () => {\n    handleLog(\"recording forever!\");\n    setIsRecording(true);\n    setIsRecordingContinuously(true);\n  };\n\n  const handleToggleDetect = () => {\n    setIsDetecting(!isDetecting);\n  };\n\n  const handleVideoComplete = vidBlob => {\n    console.log(vidBlob);\n    pushVideoDataToStorage(vidBlob);\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    if (videoRef) {\n      const video = videoRef.current.video;\n      video.height = video.videoHeight * MONITOR_SCALE;\n      video.width = video.videoWidth * MONITOR_SCALE;\n      console.log(videoRef.current.video);\n    }\n  }, [videoRef]);\n\n  return (\n    <div style={{ backgroundColor: isDay ? \"white\" : \"#282c34\" }}>\n      <Camera onRef={setVideoRef} />\n\n      <br />\n      <code>debug buttons: </code>\n      {/* <button onClick={captureOne}>capture</button>\n      <button onClick={capture5sec}>capture5sec</button>\n      <button onClick={capture5secvideo}>capture5sec video</button>\n      <button onClick={downloadAsJson}>download data as json</button>\n      <button onClick={sendToDB}>push to database</button> */}\n      <button\n        onClick={async () => {\n          const l = await grabListOfVideoPaths();\n          console.log(l);\n          console.log(typeof l);\n        }}\n      >\n        list videos recorded today\n      </button>\n      <button onClick={streamToDB}>toggle stream to database</button>\n      <button onClick={handleToggleDetect}>toggle brightness detection</button>\n      <button\n        style={{ color: isRecording ? \"red\" : \"black\" }}\n        onClick={() => setIsRecording(!isRecording)}\n      >\n        record 5 sec\n      </button>\n      <button onClick={handleRecord1Hour}>\n        record 5 sec videos for 1 hour\n      </button>\n      <button onClick={handleRecordContinuous}>\n        record 5 sec indefinitely\n      </button>\n      <br />\n      <ul>\n        {logs.map((v, i) => (\n          <li key={i}>{v}</li>\n        ))}\n      </ul>\n\n      <br />\n      {showPreviews && <Gallery data={data} />}\n      <VideoRecorder\n        videoRef={videoRef}\n        triggerRecording={isRecording}\n        duration={DURATION}\n        previewVideo={showPreviews}\n        onComplete={handleVideoComplete}\n      />\n      <VideoList />\n      <BrightnessDetector\n        videoRef={videoRef}\n        isDetecting={isDetecting}\n        delay={DELAY}\n        onDetect={v => setIsDay(v.bright)}\n      />\n    </div>\n  );\n};\n\nexport default CameraComponent;\n","//https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n\nexport const download = (\n  content,\n  fileName = \"json.txt\",\n  contentType = \"text/plain\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nexport const convertToObject = (input, showFunction) => {\n  // recursively\n  // https://stackoverflow.com/questions/37733272/convert-dom-object-to-javascript-object\n  let obj = {};\n  for (var p in input) {\n    switch (typeof input[p]) {\n      case \"function\":\n        if (showFunction) obj[p] = `function: ${input[p]}`;\n        break;\n      case \"object\":\n        obj[p] = convertToObject(input[p], showFunction);\n        break;\n      case \"number\":\n        obj[p] = input[p];\n        break;\n      default:\n        obj[p] = input[p];\n    }\n  }\n  return obj;\n};\n\nexport const convertToArray = domOBJ => {\n  let arr = [];\n  for (var p in domOBJ) {\n    arr.push(domOBJ[p]);\n  }\n  return arr;\n};\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport RiceCam from \"./components/RiceCam\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <RiceCam />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}