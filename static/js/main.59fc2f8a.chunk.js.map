{"version":3,"sources":["components/Camera/Show.module.css","logo.svg","components/customHooks/useInterval.js","components/Camera/Camera.js","components/Camera/index.js","components/Camera/Show.js","components/MediaRecorder/index.js","components/MediaRecorder/VideoRecorder.js","components/Database/lib/firebase.js","components/Database/index.js","components/BrightnessPredictor/index.js","components/RiceCam/index.js","components/atoms/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gallery","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","SETTINGS","width","height","facingMode","WebcamComponent","_ref","onRef","webcamRef","_useState","useState","_useState2","Object","slicedToArray","cameraReady","setCameraReady","setupCamera","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e1","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","_this","setState","error_messages","video","onloadedmetadata","stop","apply","this","arguments","react_default","createElement","react_webcam_default","audio","ref","screenshotFormat","videoConstraints","Camera","Gallery","data","className","styles","map","v","i","key","src","alt","Record","videoRef","triggerRecording","duration","onComplete","previewVideo","OPTIONS","videoOut","setVideoOut","_useState3","_useState4","recordDuration","setRecordDuration","_useState5","_useState6","isRecording","_useState7","_useState8","_useState9","_useState10","videoChunk","setVideoChunk","record","length","console","log","makeLink","blob","Blob","type","url","URL","createObjectURL","out","controls","href","download","concat","toConsumableArray","stream","active","recorder","MediaRecorder","ondataavailable","e","onstart","setTimeout","start","style","display","listStyleType","overflowX","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","keys","firebase","apps","initializeApp","dayjs","locale","pushImageDataToStorage","imgBlob","timestamp","format","daystamp","storage","put","then","res","location","path","firestore","collection","doc","set","catch","grabListOfVideoPaths","_callee3","day","_context3","get","_callee2","querySnapshot","output","_context2","forEach","_ref3","getDownloadURL","push","abrupt","sent","_x3","_x2","_x","loadModel","tf","predictBrightness","rgbarray","model","xs","Array","from","inputXS","preds","predict","print","arraySync","isBright","canvas","clrs","flat","getContext","getImageData","BrightnessDetector","isDetecting","onDetect","detectionDelay","setDetectionDelay","detect","bright","document","drawImage","VideoList","vlist","setVlist","Fragment","whiteSpace","fontSize","overflow","margin","CameraComponent","_ref4","_ref4$showPreviews","showPreviews","setVideoRef","isDay","setIsDay","_useState11","_useState12","setIsDetecting","_useState13","_useState14","setIsRecording","_useState15","_useState16","isRecordingContinuously","setIsRecordingContinuously","EVERY_N_MINS","_useState17","_useState18","captureDelay","_useState19","_useState20","isCapturing","capture","_useState21","_useState22","setData","_useState23","_useState24","rgb","setRGB","context","videoWidth","videoHeight","b64","toDataURL","clearRect","domOBJ","arr","convertToArray","_useState25","_useState26","streamDelay","setStreamDelay","_useState27","_useState28","isStreaming","setIsStreaming","toBlob","b","backgroundColor","components_Camera","onClick","l","color","Camera_Gallery","components_MediaRecorder","vidBlob","pushVideoDataToStorage","RiceCam_VideoList","RiceCam_BrightnessDetector","App","RiceCam","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59fc2f8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Show_gallery__34GpT\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst SETTINGS = {\n  width: 800,\n  height: 800,\n  facingMode: \"environment\"\n};\n\nconst WebcamComponent = ({ onRef }) => {\n  const webcamRef = useRef();\n  const [cameraReady, setCameraReady] = useState(false);\n  const setupCamera = async () => {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const video = webcamRef.current.video;\n    video.onloadedmetadata = () => {\n      setCameraReady(true);\n    };\n  };\n\n  useEffect(() => {\n    setupCamera();\n  }, [webcamRef]);\n\n  if (cameraReady) {\n    onRef && onRef(webcamRef);\n  }\n\n  return (\n    <Webcam\n      audio={false}\n      ref={webcamRef}\n      screenshotFormat=\"image/jpeg\"\n      videoConstraints={SETTINGS}\n      height={400}\n      width={400}\n    />\n  );\n};\n\nexport default WebcamComponent;\n","import Camera from \"./Camera\";\nimport Show from \"./Show\";\n\nexport default Camera;\nexport const Gallery = Show;\n","import React from \"react\";\n\nimport styles from \"./Show.module.css\";\n\nconst Gallery = ({ data }) => {\n  // receives b64 streams and\n\n  return (\n    <div className={styles.gallery}>\n      {data &&\n        data.map((v, i) => {\n          return <img key={i} src={v} alt=\"img\" />;\n        })}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import Record from \"./VideoRecorder\";\n\nexport default Record;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst VideoRecorder = ({\n  videoRef,\n  triggerRecording,\n  duration,\n  onComplete,\n  previewVideo\n}) => {\n  const OPTIONS = {\n    tag: \"video\",\n    type: \"video/webm\",\n    ext: \".mp4\",\n    gUM: { video: true, audio: true }\n  };\n  const [videoOut, setVideoOut] = useState(\"\");\n\n  const [recordDuration, setRecordDuration] = useState(5000);\n  useEffect(() => {\n    if (duration && typeof duration === \"number\") setRecordDuration(duration);\n  }, [duration]);\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoRecordings, setVideoRecordings] = useState([]);\n  const [videoChunk, setVideoChunk] = useState([]);\n  const ulRef = useRef();\n  useEffect(() => {\n    if (triggerRecording === true && isRecording === false) {\n      record({ duration: recordDuration });\n    }\n  }, [triggerRecording, isRecording]);\n\n  useEffect(() => {\n    // if there is a recording\n    if (videoChunk.length > 0) {\n      console.log(\"making linl!\", videoChunk);\n      previewVideo && makeLink();\n    }\n  }, [videoChunk]);\n\n  const makeLink = () => {\n    let blob = new Blob(videoChunk, { type: OPTIONS.type });\n\n    let url = URL.createObjectURL(blob);\n\n    const out = (\n      <li key={url}>\n        <video height={200} controls src={url} />\n        <br />\n        <a href={url} download={`video${OPTIONS.ext}`}>{`download ${`video${\n          OPTIONS.ext\n        }`}`}</a>\n      </li>\n    );\n    setVideoOut([...videoOut, out]);\n  };\n\n  const record = ({ duration = 2000 }) => {\n    if (videoRef) {\n      const stream = videoRef.current.stream;\n      if (!stream.active) {\n        console.log(\"media stream is not active.\", stream);\n      }\n\n      // setup recorder\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = e => {\n        // when the recording is complete and there is data\n        setVideoChunk([e.data]);\n        if (onComplete) onComplete(e.data);\n      };\n      recorder.onstart = e => {\n        setVideoChunk([]);\n        setTimeout(() => {\n          recorder.stop();\n        }, recordDuration);\n      };\n\n      // run recorder\n      recorder.start();\n    }\n  };\n\n  return (\n    <ul\n      style={{\n        display: \"flex\",\n        listStyleType: \"none\",\n        width: \"100%\",\n        overflowX: \"scroll\"\n      }}\n    >\n      {videoOut}\n    </ul>\n  );\n};\n\nexport default VideoRecorder;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nconst PushToFirebase = (databaseRef = \"test\", data, callback) => {\n  firebase\n    .database()\n    .ref(databaseRef)\n    .push(data)\n    .then(v => callback(v));\n};\n\nconst PushToFirestore = (databaseRef = \"test\", data, callback) => {\n  const db = firebase.firestore();\n  db.collection(databaseRef);\n};\n\nconst sortTimestampArray = (data, latest = false) => {\n  if (latest) return data.sort((prev, next) => dayjs(next) - dayjs(prev));\n  // latest first\n  else return data.sort((prev, next) => dayjs(prev) - dayjs(next)); // earliest first\n};\n\nexport const pushImageDataToStorage = imgBlob => {\n  const imgFolder = \"images\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${imgFolder}/${timestamp}.png`)\n    .put(imgBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      const dbRef = firebase\n        .firestore()\n        .collection(\"imageURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path });\n    })\n    .catch(e => console.log(\"error! \", e));\n};\n\nexport const pushVideoDataToStorage = vidBlob => {\n  const vidFolder = \"videos\";\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .storage()\n    .ref(`${vidFolder}/${timestamp}.mp4`)\n    .put(vidBlob)\n    .then(res => {\n      console.log(res);\n      console.log(res.ref.location.path);\n      const path = res.ref.location.path;\n      const dbRef = firebase\n        .firestore()\n        .collection(\"videoURL\")\n        .doc(daystamp)\n        .collection(\"urls\")\n        .doc()\n        .set({ url: path });\n    })\n    .catch(e => console.log(\"error! \", e));\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .get()\n    .then(async querySnapshot => {\n      let output = [];\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        // console.log(url);\n\n        return await firebase\n          .storage()\n          .ref(url)\n          .getDownloadURL()\n          .then(src => {\n            // and here are your downloadable urls\n            // console.log(\"downloadable url: \", src);\n            output.push(src);\n          });\n      });\n\n      //console.log(\"returning output! \", output);\n      return output;\n    });\n};\n\nconst deleteImageDataFromDBRecords = () => {\n  // delete by timestamp based on prediction\n  const imgCollection = \"imageData\";\n};\n\nconst createVideoFromDBRecords = () => {\n  // pull in data from DB and construct video\n  const imgCollection = \"imageData\";\n  const predCollection = \"\";\n};\n\nconst getPredictionsFromDB = () => {\n  // predictions should return together with the references UID from imageData\n  // as well as timestamp\n  const collectionName = \"predictions\";\n};\n","import * as tf from \"@tensorflow/tfjs\";\n\nconst WIDTH = 12;\nconst HEIGHT = 9;\nconst ARR_LENGTH = 432;\n\nconst loadModel = async () => {\n  return await tf.loadLayersModel(\"assets/model/brightness-predictor.json\");\n};\n\nconst predictBrightness = async rgbarray => {\n  const model = await loadModel();\n\n  if (model) {\n    return await tf.tidy(() => {\n      const xs = [Array.from(rgbarray)];\n      const inputXS = tf.tensor2d(xs, [xs.length, ARR_LENGTH]);\n\n      console.log(inputXS);\n\n      const preds = model.predict(inputXS);\n\n      preds.print();\n\n      const out = preds.arraySync()[0][0];\n\n      return out;\n    });\n  }\n};\n\n// sml model learning bright and dark\nexport const isBright = async canvas => {\n  const clrs = canvas\n    .getContext(\"2d\")\n    .getImageData(0, 0, canvas.width, canvas.height);\n\n  console.log(clrs);\n\n  const flat = clrs.data;\n  const res = await predictBrightness(flat);\n  console.log(res);\n  return res > 0.6 ? true : false;\n};\n\nexport default isBright;\n","// https://ml5js.org/docs/image-classification-example\n// https://codelabs.developers.google.com/?cat=TensorFlow\n// https://console.firebase.google.com/u/3/project/operation-verde-ricecam/database\n\nimport React, { useState, useEffect, useRef } from \"react\";\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\n\nimport useInterval from \"../customHooks/useInterval\";\nimport Camera, { Gallery } from \"../Camera\";\nimport VideoRecorder from \"../MediaRecorder\";\nimport {\n  pushImageDataToStorage,\n  pushVideoDataToStorage,\n  grabListOfVideoPaths\n} from \"../Database\";\n\nimport { download, convertToArray } from \"../atoms\";\nimport { isBright } from \"../BrightnessPredictor\";\n\ndayjs.locale(\"ja\");\nconst SCALE = 1;\nconst RGB_SCALE = 0.02;\nconst DETECT_SCALE = 0.02;\nconst STREAM_SCALE = 1;\nconst MONITOR_SCALE = 0.1;\n\nconst BrightnessDetector = ({ videoRef, isDetecting, delay, onDetect }) => {\n  // local ML brightness detection\n  const [detectionDelay, setDetectionDelay] = useState(500);\n  useEffect(() => {\n    if (delay && typeof delay === \"number\") setDetectionDelay(delay);\n  }, [delay]);\n\n  useInterval(\n    () => {\n      detect();\n    },\n    isDetecting ? detectionDelay : null\n  );\n  const detect = async () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 12;\n      canvas.height = 9;\n      // TODO: check if canvas is drawing entire image, or is it cut off\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // check brightness\n      const bright = await isBright(canvas);\n      if (onDetect) {\n        onDetect({ bright: bright });\n      }\n    }\n  };\n  return null;\n};\n\nconst PhotoRecorder = () => {};\n\nconst Timer = ({ start, end, onDetect }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const startTimestamp = dayjs(start);\n  const endTimestamp = dayjs(end);\n\n  console.log(timestamp, startTimestamp, endTimestamp);\n};\n\nconst VideoList = () => {\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n\n  useEffect(() => {\n    grabListOfVideoPaths().then(v => {\n      console.log(\"paths\");\n      console.log(v);\n      setVlist(v);\n    });\n  }, []);\n\n  return (\n    <>\n      <h3>current list of videos today ({vlist.length}): </h3>\n      <ul\n        style={{\n          whiteSpace: \"nowrap\",\n          fontSize: \"0.5rem\",\n          listStyleType: \"none\",\n          height: 300,\n          overflow: \"scroll\"\n        }}\n      >\n        {vlist.map((v, i) => {\n          return (\n            <li key={i} style={{ margin: \"5px 0\" }}>\n              <a href={v}>{v}</a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst CameraComponent = ({ showPreviews = false }) => {\n  const [videoRef, setVideoRef] = useState();\n  const [isDay, setIsDay] = useState(true);\n\n  // local ML brightness detector\n  const [isDetecting, setIsDetecting] = useState(false);\n  const DELAY = 1000;\n  // video recorder\n  const [isRecording, setIsRecording] = useState(false);\n  const DURATION = 5000;\n\n  // timer for multiple video records\n  const [isRecordingContinuously, setIsRecordingContinuously] = useState(false);\n  const EVERY_N_MINS = 5;\n  const RECORDING_INTERVALS = EVERY_N_MINS * 60000;\n  useInterval(\n    () => {\n      if (!isRecording) {\n        setIsRecording(true);\n      } else {\n        console.log(\"recording still underway...\");\n      }\n    },\n    isRecordingContinuously ? RECORDING_INTERVALS : null\n  );\n\n  // local capture\n  const [captureDelay, setCaptureDelay] = useState(1000);\n  const [isCapturing, setIsCapturing] = useState(false);\n  useInterval(\n    () => {\n      capture();\n    },\n    isCapturing ? captureDelay : null\n  );\n\n  const [data, setData] = useState([]);\n  const [rgb, setRGB] = useState([]);\n  const capture = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * SCALE;\n      canvas.height = video.videoHeight * SCALE;\n      // canvas.width = 12;\n      // canvas.height = 9;\n\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      canvas.width = video.videoWidth * RGB_SCALE;\n      canvas.height = video.videoHeight * RGB_SCALE;\n\n      context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // rgb array (flat)\n      const clrs = context.getImageData(0, 0, canvas.width, canvas.height);\n      console.log(clrs);\n      const flat = convertToArray(clrs.data);\n\n      setRGB([...rgb, flat]);\n      // download(JSON.stringify({ data: flat }), \"temp.json\", \"application/json\");\n\n      return data;\n    }\n  };\n\n  // db streaming for images\n  const [streamDelay, setStreamDelay] = useState(100);\n  const [isStreaming, setIsStreaming] = useState(false);\n  useInterval(\n    () => {\n      stream();\n    },\n    isStreaming ? streamDelay : null\n  );\n  const stream = () => {\n    if (videoRef) {\n      let context;\n      const video = videoRef.current.video;\n      const canvas = document.createElement(\"canvas\");\n\n      canvas.width = video.videoWidth * STREAM_SCALE;\n      canvas.height = video.videoHeight * STREAM_SCALE;\n      context = canvas.getContext(\"2d\");\n\n      // full res\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // preview\n      // base64 setstate\n      const b64 = canvas.toDataURL();\n      setData([...data, b64]);\n\n      // blob it to send to db\n      // blobbing takes a long time therefore there is a callback\n      canvas.toBlob(b => {\n        console.log(b);\n        pushImageDataToStorage(b);\n      });\n    }\n  };\n\n  // --------\n  // TESTING\n  // --------\n\n  const captureOne = () => {\n    setIsCapturing(true);\n    setTimeout(() => {\n      setIsCapturing(false);\n    }, 1100);\n  };\n\n  const capture5sec = () => {\n    setIsCapturing(true);\n    setTimeout(() => {\n      setIsCapturing(false);\n    }, 5000);\n  };\n\n  const capture5secvideo = () => {\n    setCaptureDelay(1);\n    setIsCapturing(true);\n    setTimeout(() => {\n      setIsCapturing(false);\n      setCaptureDelay(1000);\n    }, 5000);\n  };\n\n  const downloadAsJson = () => {\n    download(JSON.stringify({ data: rgb }), \"temp.json\", \"application/json\");\n    setData([]);\n    setRGB([]);\n  };\n\n  const sendToDB = () => {\n    // push to firebase\n    pushImageDataToStorage();\n  };\n\n  const streamToDB = () => {\n    // toggle\n    if (!isStreaming) {\n      console.log(\"capturing!\");\n      setStreamDelay(1);\n      setIsStreaming(true);\n    } else {\n      console.log(\"stopping!\");\n      setIsStreaming(false);\n      setStreamDelay(1000);\n    }\n  };\n\n  const handleRecord1Hour = () => {\n    const OneHourInMS = 3600000;\n    setIsRecording(true);\n    setIsRecordingContinuously(true);\n    setTimeout(() => {\n      setIsRecordingContinuously(false);\n    }, OneHourInMS);\n  };\n\n  const handleRecordContinuous = () => {\n    console.log(\"recording forever!\");\n    setIsRecording(true);\n    setIsRecordingContinuously(true);\n  };\n\n  const handleToggleDetect = () => {\n    setIsDetecting(!isDetecting);\n  };\n\n  const handleVideoComplete = vidBlob => {\n    console.log(vidBlob);\n    pushVideoDataToStorage(vidBlob);\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    if (videoRef) {\n      const video = videoRef.current.video;\n      video.height = video.videoHeight * MONITOR_SCALE;\n      video.width = video.videoWidth * MONITOR_SCALE;\n      console.log(videoRef.current.video);\n    }\n  }, [videoRef]);\n\n  return (\n    <div style={{ backgroundColor: isDay ? \"white\" : \"#282c34\" }}>\n      <Camera onRef={setVideoRef} />\n\n      <br />\n      <code>debug buttons: </code>\n      {/* <button onClick={captureOne}>capture</button>\n      <button onClick={capture5sec}>capture5sec</button>\n      <button onClick={capture5secvideo}>capture5sec video</button>\n      <button onClick={downloadAsJson}>download data as json</button>\n      <button onClick={sendToDB}>push to database</button> */}\n      <button\n        onClick={async () => {\n          const l = await grabListOfVideoPaths();\n          console.log(l);\n          console.log(typeof l);\n        }}\n      >\n        list videos recorded today\n      </button>\n      <button onClick={streamToDB}>toggle stream to database</button>\n      <button onClick={handleToggleDetect}>toggle brightness detection</button>\n      <button\n        style={{ color: isRecording ? \"red\" : \"black\" }}\n        onClick={() => setIsRecording(!isRecording)}\n      >\n        record 5 sec\n      </button>\n      <button onClick={handleRecord1Hour}>\n        record 5 sec videos for 1 hour\n      </button>\n      <button onClick={handleRecordContinuous}>\n        record 5 sec indefinitely\n      </button>\n      <br />\n      <br />\n      {showPreviews && <Gallery data={data} />}\n      <VideoRecorder\n        videoRef={videoRef}\n        triggerRecording={isRecording}\n        duration={DURATION}\n        previewVideo={showPreviews}\n        onComplete={handleVideoComplete}\n      />\n      <VideoList />\n      <BrightnessDetector\n        videoRef={videoRef}\n        isDetecting={isDetecting}\n        delay={DELAY}\n        onDetect={v => setIsDay(v.bright)}\n      />\n    </div>\n  );\n};\n\nexport default CameraComponent;\n","//https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n\nexport const download = (\n  content,\n  fileName = \"json.txt\",\n  contentType = \"text/plain\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nexport const convertToObject = domOBJ => {\n  let obj = {};\n  for (var p in domOBJ) {\n    obj[p] = domOBJ[p];\n  }\n  return obj;\n};\n\nexport const convertToArray = domOBJ => {\n  let arr = [];\n  for (var p in domOBJ) {\n    arr.push(domOBJ[p]);\n  }\n  return arr;\n};\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport RiceCam from \"./components/RiceCam\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <RiceCam />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}